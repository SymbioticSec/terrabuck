{
  "project_info": {
    "project_id": "gcp-media-streaming-platform",
    "project_name": "Media Streaming Platform with Content Delivery",
    "description": "A scalable media streaming platform for a digital content company that serves video content to global audiences. The platform handles video upload, transcoding, storage, and delivery with CDN integration. It includes user authentication, content management, analytics tracking, and adaptive bitrate streaming. The system is designed to handle thousands of concurrent viewers with low latency and high availability.",
    "cloud_provider": "gcp",
    "language": "terraform",
    "architecture_type": "microservices",
    "business_context": "A growing media company transitioning from traditional broadcasting to digital streaming needs a robust platform to deliver video content to subscribers worldwide. The platform must support multiple video qualities, handle peak viewing times, provide detailed analytics, and ensure content protection with DRM capabilities.",
    "components": [
      {
        "name": "content_storage",
        "service_type": "google_storage_bucket",
        "purpose": "Stores original video files, transcoded variants, thumbnails, and metadata with lifecycle management",
        "dependencies": [],
        "security_considerations": [
          "bucket_access_controls",
          "encryption_at_rest",
          "signed_urls",
          "cors_policies"
        ],
        "configuration_complexity": "medium"
      },
      {
        "name": "transcoding_service",
        "service_type": "google_cloud_functions",
        "purpose": "Serverless video transcoding triggered by uploads to create multiple bitrate variants and formats",
        "dependencies": [
          "content_storage"
        ],
        "security_considerations": [
          "function_permissions",
          "vpc_connector",
          "environment_variables"
        ],
        "configuration_complexity": "high"
      },
      {
        "name": "streaming_api",
        "service_type": "google_compute_engine",
        "purpose": "RESTful API service handling user authentication, content catalog, streaming URLs, and user preferences",
        "dependencies": [
          "user_database",
          "content_storage"
        ],
        "security_considerations": [
          "instance_identity",
          "firewall_rules",
          "ssl_certificates",
          "api_authentication"
        ],
        "configuration_complexity": "medium"
      },
      {
        "name": "user_database",
        "service_type": "google_sql_database_instance",
        "purpose": "Managed PostgreSQL storing user accounts, subscriptions, viewing history, and content metadata",
        "dependencies": [],
        "security_considerations": [
          "database_encryption",
          "private_ip",
          "authorized_networks",
          "backup_encryption"
        ],
        "configuration_complexity": "medium"
      },
      {
        "name": "cdn_distribution",
        "service_type": "google_compute_global_forwarding_rule",
        "purpose": "Global CDN for low-latency video delivery with edge caching and geographic distribution",
        "dependencies": [
          "content_storage",
          "streaming_api"
        ],
        "security_considerations": [
          "ssl_policies",
          "ddos_protection",
          "origin_access_control"
        ],
        "configuration_complexity": "medium"
      },
      {
        "name": "analytics_pipeline",
        "service_type": "google_pubsub_topic",
        "purpose": "Real-time event streaming for viewing analytics, user behavior tracking, and performance monitoring",
        "dependencies": [
          "streaming_api"
        ],
        "security_considerations": [
          "topic_permissions",
          "message_encryption",
          "subscriber_authentication"
        ],
        "configuration_complexity": "low"
      }
    ],
    "network_topology": {
      "vpc_structure": "Single VPC with regional subnets for compute resources, private Google Access enabled for serverless components",
      "security_zones": [
        "public",
        "private",
        "data"
      ],
      "connectivity_patterns": [
        "CDN connects to storage buckets and API instances via public endpoints",
        "API instances connect to database via private IP",
        "Cloud Functions access storage via service account authentication",
        "Pub/Sub receives events from API instances via authenticated publishing"
      ]
    },
    "estimated_resources": {
      "compute_instances": 3,
      "storage_buckets": 2,
      "databases": 1,
      "networking_components": 5,
      "serverless_functions": 2,
      "messaging_components": 2,
      "security_components": 4,
      "monitoring_components": 3,
      "total_estimated": 22
    },
    "generation_metadata": {
      "agent": "ArchitectureAgent",
      "timestamp": "2025-08-08T14:50:55.751120"
    },
    "vulnerabilities": [
      {
        "rule_id": "GOOGLE-COMPUTE-NO_DEFAULT_SERVICE_ACCOUNT",
        "title": "No Default Service Account",
        "description": "Compute instances are using the default Compute Engine service account instead of custom service accounts with minimal permissions. This violates the principle of least privilege and exposes the streaming API instances to unnecessary security risks.",
        "severity": "medium",
        "affected_component": "streaming_api",
        "injection_strategy": "Configure google_compute_instance resources to use the default service account email pattern",
        "business_impact": "Compromised API instances could access other GCP services with overly broad permissions, potentially exposing user data or allowing lateral movement in the media platform infrastructure",
        "trivy_yaml_content": "terraform:\n  links:\n    - https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#\n  good:\n    - |-\n      resource \"google_service_account\" \"default\" {\n        account_id   = \"service_account_id\"\n        display_name = \"Service Account\"\n      }\n\n      resource \"google_compute_instance\" \"default\" {\n        name         = \"test\"\n        machine_type = \"e2-medium\"\n        zone         = \"us-central1-a\"\n\n        boot_disk {\n          initialize_params {\n            image = \"debian-cloud/debian-9\"\n          }\n        }\n\n        service_account {\n          # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.\n          email  = google_service_account.default.email\n          scopes = [\"cloud-platform\"]\n        }\n      }\n  bad:\n    - |-\n      resource \"google_compute_instance\" \"default\" {\n        name         = \"test\"\n        machine_type = \"e2-medium\"\n        zone         = \"us-central1-a\"\n\n        boot_disk {\n          initialize_params {\n            image = \"debian-cloud/debian-9\"\n          }\n        }\n\n        service_account {\n          # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.\n          email  = \"1234567890-compute@developer.gserviceaccount.com\"\n          scopes = [\"cloud-platform\"]\n        }\n      }",
        "file_name": "no_default_service_account.yaml",
        "service": "compute",
        "provider": "unknown",
        "injection_example": {
          "vulnerable_pattern": "Use the default Compute Engine service account email format in streaming API instances",
          "explanation": "Default service accounts have Editor-level permissions across the project, violating least privilege principles for media streaming workloads"
        },
        "trivy_rule": true,
        "llm_enhanced": true,
        "source": "llm_selected_trivy_rule"
      },
      {
        "rule_id": "GOOGLE-SQL-ENABLE_BACKUP",
        "title": "Enable Backup",
        "description": "The PostgreSQL database storing user accounts, subscriptions, and viewing history lacks automated backup configuration, creating significant data loss risks for the media streaming platform's critical user data.",
        "severity": "medium",
        "affected_component": "user_database",
        "injection_strategy": "Configure google_sql_database_instance with backup_configuration.enabled = false",
        "business_impact": "Loss of user accounts, subscription data, and viewing history could result in service disruption, customer churn, and potential regulatory compliance violations for the streaming platform",
        "trivy_yaml_content": "terraform:\n  links:\n    - https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance#settings.backup_configuration.enabled=true\n  good:\n    - |-\n      resource \"google_sql_database_instance\" \"db\" {\n        name             = \"db\"\n        database_version = \"POSTGRES_12\"\n        region           = \"us-central1\"\n        settings {\n          backup_configuration {\n            enabled = true\n          }\n        }\n      }\n\n      resource \"google_sql_database_instance\" \"new_instance_sql_replica\" {\n        name                 = \"replica\"\n        database_version     = \"POSTGRES_12\"\n        region               = \"us-central1\"\n        master_instance_name = google_sql_database_instance.db.name\n        replica_configuration {\n          connect_retry_interval  = 0\n          failover_target         = false\n          master_heartbeat_period = 0\n        }\n      }\n  bad:\n    - |-\n      resource \"google_sql_database_instance\" \"db\" {\n        name             = \"db\"\n        database_version = \"POSTGRES_12\"\n        region           = \"us-central1\"\n        settings {\n          backup_configuration {\n            enabled = false\n          }\n        }\n      }",
        "file_name": "enable_backup.yaml",
        "service": "sql",
        "provider": "unknown",
        "injection_example": {
          "vulnerable_pattern": "Disable automated backups on the user database instance",
          "explanation": "Without automated backups, the streaming platform risks losing critical user data, subscription information, and viewing analytics"
        },
        "trivy_rule": true,
        "llm_enhanced": true,
        "source": "llm_selected_trivy_rule"
      },
      {
        "rule_id": "GOOGLE-COMPUTE-DISABLE_ALLOW_ALL_PORTS_FIREWALL_RULE",
        "title": "Disable Allow All Ports Firewall Rule",
        "description": "Firewall rules allow unrestricted access to all ports (0-65535) for the streaming API and CDN infrastructure, creating excessive attack surface for the media platform's network security.",
        "severity": "medium",
        "affected_component": "streaming_api",
        "injection_strategy": "Create google_compute_firewall rules with overly permissive port ranges",
        "business_impact": "Unrestricted network access could enable attackers to exploit services on non-standard ports, potentially compromising the streaming infrastructure or accessing internal management interfaces",
        "trivy_yaml_content": "terraform:\n  links:\n    - https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_firewall#allow\n  good:\n    - |-\n      resource \"google_compute_firewall\" \"good_example\" {\n        name    = \"allow-specific-ports\"\n        network = \"default\"\n\n        allow {\n          protocol = \"tcp\"\n          ports    = [\"80\", \"443\"]\n        }\n\n        source_ranges = [\"0.0.0.0/0\"]\n        target_tags   = [\"web-servers\"]\n      }\n    - |-\n      resource \"google_compute_firewall\" \"allow-ssh-and-http\" {\n        name    = \"allow-ssh-and-http\"\n        network = \"default\"\n\n        allow {\n          protocol = \"tcp\"\n          ports    = [\"22\", \"80\"]\n        }\n\n        source_ranges = [\"192.168.1.0/24\"]\n        target_tags   = [\"servers\"]\n      }\n  bad:\n    - |-\n      resource \"google_compute_firewall\" \"bad_example\" {\n        name    = \"allow-all-ports\"\n        network = \"default\"\n\n        allow {\n          protocol = \"tcp\"\n          ports    = [\"0-65535\"]\n        }\n\n        source_ranges = [\"0.0.0.0/0\"]\n        target_tags   = [\"servers\"]\n      }\n    - |-\n      resource \"google_compute_firewall\" \"allow-all-tcp\" {\n        name    = \"allow-all-tcp\"\n        network = \"default\"\n\n        allow {\n          protocol = \"tcp\"\n        }\n\n        source_ranges = [\"192.168.1.0/24\"]\n        target_tags   = [\"servers\"]\n      }",
        "file_name": "disable_allow_all_ports_firewall_rule.yaml",
        "service": "compute",
        "provider": "unknown",
        "injection_example": {
          "vulnerable_pattern": "Configure firewall rules with port range 0-65535 or no port specification for streaming infrastructure",
          "explanation": "Overly permissive firewall rules expose unnecessary services and increase the attack surface for the media streaming platform"
        },
        "trivy_rule": true,
        "llm_enhanced": true,
        "source": "llm_selected_trivy_rule"
      },
      {
        "rule_id": "GOOGLE-COMPUTE-ENABLE_SUBNETWORK_PRIVATE_GOOGLE_ACCESS",
        "title": "Enable Subnetwork Private Google Access",
        "description": "VPC subnets hosting the streaming infrastructure lack Private Google Access configuration, forcing traffic to Google APIs through public internet routes instead of private Google network paths.",
        "severity": "medium",
        "affected_component": "streaming_api",
        "injection_strategy": "Configure google_compute_subnetwork with private_ip_google_access = false or omit the setting",
        "business_impact": "API calls to Google services from streaming infrastructure traverse public internet, increasing latency, costs, and exposure to network-based attacks during content processing and storage operations",
        "trivy_yaml_content": "terraform:\n  links:\n    - https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_subnetwork#private_ip_google_access\n  good:\n    - |-\n      resource \"google_compute_subnetwork\" \"good_example\" {\n        name                     = \"test-subnetwork\"\n        ip_cidr_range            = \"10.2.0.0/16\"\n        region                   = \"us-central1\"\n        network                  = google_compute_network.custom-test.id\n        private_ip_google_access = true\n      }\n      resource \"google_compute_network\" \"custom-test\" {\n        name                    = \"test-network\"\n        auto_create_subnetworks = false\n      }\n  bad:\n    - |-\n      resource \"google_compute_subnetwork\" \"bad_example\" {\n        name                     = \"test-subnetwork\"\n        ip_cidr_range            = \"10.2.0.0/16\"\n        region                   = \"us-central1\"\n        network                  = google_compute_network.custom-test.id\n        private_ip_google_access = false\n      }\n      resource \"google_compute_network\" \"custom-test\" {\n        name                    = \"test-network\"\n        auto_create_subnetworks = false\n      }\n    - |-\n      resource \"google_compute_subnetwork\" \"bad_example_unspecified\" {\n        name          = \"test-subnetwork\"\n        ip_cidr_range = \"10.2.0.0/16\"\n        region        = \"us-central1\"\n        network       = google_compute_network.custom-test.id\n      }\n      resource \"google_compute_network\" \"custom-test\" {\n        name                    = \"test-network\"\n        auto_create_subnetworks = false\n      }",
        "file_name": "enable_subnetwork_private_google_access.yaml",
        "service": "compute",
        "provider": "unknown",
        "injection_example": {
          "vulnerable_pattern": "Disable or omit private_ip_google_access setting in VPC subnets",
          "explanation": "Without Private Google Access, streaming services must route API calls through public internet, reducing security and performance"
        },
        "trivy_rule": true,
        "llm_enhanced": true,
        "source": "llm_selected_trivy_rule"
      },
      {
        "rule_id": "GOOGLE-COMPUTE-DISK_ENCRYPTION_NO_PLAINTEXT_KEY",
        "title": "Disk Encryption No Plaintext Key",
        "description": "Compute instances in the streaming API infrastructure use plaintext encryption keys for disk encryption instead of Google Cloud KMS-managed keys, exposing sensitive media metadata and application data.",
        "severity": "medium",
        "affected_component": "streaming_api",
        "injection_strategy": "Configure google_compute_instance or google_compute_disk with raw_key instead of kms_key_self_link",
        "business_impact": "Plaintext encryption keys in Terraform state and configuration files could be exposed, allowing attackers to decrypt streaming platform data including user information and content metadata",
        "trivy_yaml_content": "terraform:\n  links:\n    - https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_disk#kms_key_self_link\n  good:\n    - |-\n      resource \"google_compute_disk\" \"good_example\" {\n        disk_encryption_key {\n          kms_key_self_link = google_kms_crypto_key.my_crypto_key.id\n        }\n      }\n    - |-\n      resource \"google_compute_instance\" \"bad_example\" {\n        boot_disk {\n          initialize_params {\n            image = \"debian-cloud/debian-11\"\n            source_snapshot_encryption_key {\n              kms_key_self_link = google_kms_crypto_key.my_crypto_key.id\n            }\n          }\n        }\n      }\n  bad:\n    - |-\n      resource \"google_compute_disk\" \"bad_example\" {\n        disk_encryption_key {\n          raw_key = \"b2ggbm8gdGhpcyBpcyBiYWQ=\"\n        }\n      }\n    - |-\n      resource \"google_compute_instance\" \"bad_example\" {\n        boot_disk {\n          disk_encryption_key_raw = \"b2ggbm8gdGhpcyBpcyBiYWQ=\"\n        }\n      }\n    - |-\n      resource \"google_compute_instance\" \"bad_example\" {\n        attached_disk {\n          disk_encryption_key_raw = \"b2ggbm8gdGhpcyBpcyBiYWQ=\"\n        }\n      }",
        "file_name": "disk_encryption_no_plaintext_key.yaml",
        "service": "compute",
        "provider": "unknown",
        "injection_example": {
          "vulnerable_pattern": "Use raw_key or disk_encryption_key_raw with base64-encoded keys in compute instances",
          "explanation": "Plaintext encryption keys stored in Terraform configuration expose sensitive streaming platform data if the infrastructure code is compromised"
        },
        "trivy_rule": true,
        "llm_enhanced": true,
        "source": "llm_selected_trivy_rule"
      },
      {
        "rule_id": "GOOGLE-COMPUTE-PROJECT_LEVEL_OSLOGIN",
        "title": "Project Level Oslogin",
        "description": "The media streaming platform project lacks OS Login enforcement, allowing SSH key-based authentication instead of centralized identity management for compute instance access.",
        "severity": "medium",
        "affected_component": "streaming_api",
        "injection_strategy": "Configure google_compute_project_metadata with enable-oslogin = false",
        "business_impact": "Without OS Login, the streaming platform cannot enforce centralized access controls or audit SSH access to compute instances, creating compliance and security monitoring gaps",
        "trivy_yaml_content": "terraform:\n  links:\n    - https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_project_metadata#\n  good:\n    - |-\n      resource \"google_compute_project_metadata\" \"default\" {\n        metadata = {\n          enable-oslogin = true\n        }\n      }\n  bad:\n    - |-\n      resource \"google_compute_project_metadata\" \"default\" {\n        metadata = {\n          enable-oslogin = false\n        }\n      }",
        "file_name": "project_level_oslogin.yaml",
        "service": "compute",
        "provider": "unknown",
        "injection_example": {
          "vulnerable_pattern": "Disable OS Login at the project level for the streaming platform",
          "explanation": "Disabling OS Login prevents centralized SSH access management and audit logging for streaming infrastructure instances"
        },
        "trivy_rule": true,
        "llm_enhanced": true,
        "source": "llm_selected_trivy_rule"
      },
      {
        "rule_id": "GOOGLE-SQL-PG_LOG_LOCK_WAITS",
        "title": "Pg Log Lock Waits",
        "description": "PostgreSQL database logging configuration lacks lock wait monitoring, reducing visibility into potential performance issues and security incidents affecting user data access in the streaming platform.",
        "severity": "medium",
        "affected_component": "user_database",
        "injection_strategy": "Configure google_sql_database_instance database_flags with log_lock_waits = off",
        "business_impact": "Without lock wait logging, the streaming platform cannot detect database performance issues or potential denial-of-service attacks targeting user authentication and content access systems",
        "trivy_yaml_content": "terraform:\n  links:\n    - https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance\n  good:\n    - |-\n      resource \"google_sql_database_instance\" \"db\" {\n        name             = \"db\"\n        database_version = \"POSTGRES_12\"\n        region           = \"us-central1\"\n        settings {\n          database_flags {\n            name  = \"log_lock_waits\"\n            value = \"on\"\n          }\n        }\n      }\n  bad:\n    - |-\n      resource \"google_sql_database_instance\" \"db\" {\n        name             = \"db\"\n        database_version = \"POSTGRES_12\"\n        region           = \"us-central1\"\n        settings {\n          database_flags {\n            name  = \"log_lock_waits\"\n            value = \"off\"\n          }\n        }\n      }",
        "file_name": "pg_log_lock_waits.yaml",
        "service": "sql",
        "provider": "unknown",
        "injection_example": {
          "vulnerable_pattern": "Disable PostgreSQL lock wait logging in the user database configuration",
          "explanation": "Without lock wait logging, the streaming platform loses visibility into database contention that could indicate performance or security issues"
        },
        "trivy_rule": true,
        "llm_enhanced": true,
        "source": "llm_selected_trivy_rule"
      }
    ],
    "vulnerability_metadata": {
      "total_count": 7,
      "trivy_rules_used": [
        "GOOGLE-COMPUTE-NO_DEFAULT_SERVICE_ACCOUNT",
        "GOOGLE-SQL-ENABLE_BACKUP",
        "GOOGLE-COMPUTE-DISABLE_ALLOW_ALL_PORTS_FIREWALL_RULE",
        "GOOGLE-COMPUTE-ENABLE_SUBNETWORK_PRIVATE_GOOGLE_ACCESS",
        "GOOGLE-COMPUTE-DISK_ENCRYPTION_NO_PLAINTEXT_KEY",
        "GOOGLE-COMPUTE-PROJECT_LEVEL_OSLOGIN",
        "GOOGLE-SQL-PG_LOG_LOCK_WAITS"
      ],
      "severity_distribution": {
        "critical": 0,
        "high": 0,
        "medium": 7,
        "low": 0
      },
      "service_categories": [
        "sql",
        "compute"
      ],
      "services_covered": [
        "sql",
        "compute"
      ],
      "trivy_integration": true,
      "llm_selected": true
    }
  },
  "generation_info": {
    "extraction_method": "block_marker_parsing",
    "source": "llm_response",
    "project_name": "Media Streaming Platform with Content Delivery",
    "architecture_type": "microservices",
    "total_resources": 25,
    "resource_breakdown": {
      "networking": 6,
      "compute": 3,
      "storage": 4,
      "database": 3,
      "serverless": 2,
      "messaging": 2,
      "cdn": 4,
      "security": 1
    },
    "components_implemented": [
      {
        "name": "content_storage",
        "resources": [
          "google_storage_bucket.content_storage",
          "google_storage_bucket.transcoded_storage"
        ],
        "status": "implemented"
      },
      {
        "name": "transcoding_service",
        "resources": [
          "google_cloudfunctions_function.transcoding_service"
        ],
        "status": "implemented"
      },
      {
        "name": "streaming_api",
        "resources": [
          "google_compute_instance.streaming_api"
        ],
        "status": "implemented"
      },
      {
        "name": "user_database",
        "resources": [
          "google_sql_database_instance.user_database",
          "google_sql_database.streaming_db",
          "google_sql_user.streaming_user"
        ],
        "status": "implemented"
      },
      {
        "name": "cdn_distribution",
        "resources": [
          "google_compute_global_forwarding_rule.cdn_distribution"
        ],
        "status": "implemented"
      },
      {
        "name": "analytics_pipeline",
        "resources": [
          "google_pubsub_topic.analytics_pipeline",
          "google_pubsub_subscription.analytics_subscription"
        ],
        "status": "implemented"
      }
    ],
    "vulnerabilities_injected": 8,
    "deployment_time_estimate": "15-20 minutes",
    "estimated_monthly_cost": "$150-300 USD",
    "supported_regions": [
      "us-central1",
      "us-east1",
      "europe-west1",
      "asia-southeast1"
    ]
  },
  "file_structure": [],
  "trivy_integration": {},
  "validation_summary": {
    "component_coverage": 1.0,
    "resource_count": 25,
    "components_implemented": 6,
    "components_missing": 0,
    "recommendations": []
  }
}