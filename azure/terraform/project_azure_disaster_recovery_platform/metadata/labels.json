{
  "project_labels": {
    "project_id": "azure_disaster_recovery_platform",
    "overall_security_posture": "vulnerable",
    "vulnerability_count": {
      "total": 8,
      "by_severity": {
        "critical": 0,
        "high": 0,
        "medium": 8,
        "low": 0
      },
      "by_type": {
        "access_control": 2,
        "encryption": 3,
        "network": 1,
        "monitoring": 1,
        "identity": 1
      },
      "by_trivy_service": {
        "appservice": 3,
        "storage": 2,
        "database": 2,
        "monitor": 1
      }
    },
    "complexity_score": 8,
    "realism_score": 9,
    "educational_value": 9,
    "trivy_coverage": {
      "rules_represented": [
        "AZURE-APPSERVICE-ENFORCE_HTTPS",
        "AZURE-STORAGE-USE_SECURE_TLS_POLICY",
        "AZURE-DATABASE-SECURE_TLS_POLICY",
        "AZURE-APPSERVICE-AUTHENTICATION_ENABLED",
        "AZURE-DATABASE-ALL_THREAT_ALERTS_ENABLED",
        "AZURE-MONITOR-CAPTURE_ALL_ACTIVITIES",
        "AZURE-STORAGE-ALLOW_MICROSOFT_SERVICE_BYPASS",
        "AZURE-APPSERVICE-ACCOUNT_IDENTITY_REGISTERED"
      ],
      "services_covered": [
        "appservice",
        "storage",
        "database",
        "monitor"
      ],
      "detection_accuracy": "95%"
    }
  },
  "vulnerability_labels": [
    {
      "rule_id": "AZURE-APPSERVICE-ENFORCE_HTTPS",
      "trivy_rule_info": {
        "original_file": "enforce_https.yaml",
        "service_category": "appservice",
        "source_url": "https://github.com/aquasecurity/trivy-checks/blob/main/checks/cloud/azure/appservice/enforce_https.yaml"
      },
      "vulnerability_class": "transport_security",
      "detection_difficulty": "easy",
      "remediation_effort": "low",
      "business_impact_score": 7,
      "compliance_relevance": [
        "GDPR",
        "SOC2",
        "PCI-DSS",
        "HIPAA"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "network_access_to_application",
        "ability_to_intercept_traffic"
      ],
      "mitigation_strategies": [
        "Set https_only = true on Function Apps",
        "Set https_only = true on App Services",
        "Configure HTTP to HTTPS redirects",
        "Implement HSTS headers"
      ],
      "code_patterns": {
        "vulnerable_pattern": "azurerm_function_app without https_only = true",
        "secure_pattern": "azurerm_function_app with https_only = true"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "transport_security",
        "severity_numeric": 6.5,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AZURE-STORAGE-USE_SECURE_TLS_POLICY",
      "trivy_rule_info": {
        "original_file": "use_secure_tls_policy.yaml",
        "service_category": "storage",
        "source_url": "https://github.com/aquasecurity/trivy-checks/blob/main/checks/cloud/azure/storage/use_secure_tls_policy.yaml"
      },
      "vulnerability_class": "encryption_in_transit",
      "detection_difficulty": "easy",
      "remediation_effort": "low",
      "business_impact_score": 8,
      "compliance_relevance": [
        "GDPR",
        "SOC2",
        "PCI-DSS",
        "NIST"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "network_access_to_storage",
        "tls_downgrade_capability"
      ],
      "mitigation_strategies": [
        "Set min_tls_version = 'TLS1_2'",
        "Disable older TLS versions at network level",
        "Implement certificate pinning",
        "Monitor TLS version usage"
      ],
      "code_patterns": {
        "vulnerable_pattern": "azurerm_storage_account with min_tls_version = 'TLS1_0' or 'TLS1_1'",
        "secure_pattern": "azurerm_storage_account with min_tls_version = 'TLS1_2'"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "encryption_in_transit",
        "severity_numeric": 7.0,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AZURE-DATABASE-SECURE_TLS_POLICY",
      "trivy_rule_info": {
        "original_file": "secure_tls_policy.yaml",
        "service_category": "database",
        "source_url": "https://github.com/aquasecurity/trivy-checks/blob/main/checks/cloud/azure/database/secure_tls_policy.yaml"
      },
      "vulnerability_class": "encryption_in_transit",
      "detection_difficulty": "easy",
      "remediation_effort": "low",
      "business_impact_score": 9,
      "compliance_relevance": [
        "GDPR",
        "SOC2",
        "PCI-DSS",
        "HIPAA"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "database_network_access",
        "tls_interception_tools"
      ],
      "mitigation_strategies": [
        "Set minimum_tls_version = '1.2' on SQL Server",
        "Configure ssl_minimal_tls_version_enforced = 'TLS1_2' for MySQL/PostgreSQL",
        "Enable connection encryption",
        "Use certificate-based authentication"
      ],
      "code_patterns": {
        "vulnerable_pattern": "azurerm_mssql_server with minimum_tls_version = '1.1' or lower",
        "secure_pattern": "azurerm_mssql_server with minimum_tls_version = '1.2'"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "encryption_in_transit",
        "severity_numeric": 7.5,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AZURE-APPSERVICE-AUTHENTICATION_ENABLED",
      "trivy_rule_info": {
        "original_file": "authentication_enabled.yaml",
        "service_category": "appservice",
        "source_url": "https://github.com/aquasecurity/trivy-checks/blob/main/checks/cloud/azure/appservice/authentication_enabled.yaml"
      },
      "vulnerability_class": "access_control",
      "detection_difficulty": "easy",
      "remediation_effort": "medium",
      "business_impact_score": 8,
      "compliance_relevance": [
        "SOC2",
        "ISO27001",
        "NIST"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "network_access_to_application"
      ],
      "mitigation_strategies": [
        "Configure auth_settings block with enabled = true",
        "Integrate with Azure Active Directory",
        "Implement OAuth/OIDC authentication",
        "Set up role-based access control"
      ],
      "code_patterns": {
        "vulnerable_pattern": "azurerm_app_service without auth_settings block",
        "secure_pattern": "azurerm_app_service with auth_settings { enabled = true }"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "access_control",
        "severity_numeric": 7.0,
        "should_flag": true,
        "auto_remediable": false,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AZURE-DATABASE-ALL_THREAT_ALERTS_ENABLED",
      "trivy_rule_info": {
        "original_file": "all_threat_alerts_enabled.yaml",
        "service_category": "database",
        "source_url": "https://github.com/aquasecurity/trivy-checks/blob/main/checks/cloud/azure/database/all_threat_alerts_enabled.yaml"
      },
      "vulnerability_class": "monitoring_detection",
      "detection_difficulty": "medium",
      "remediation_effort": "low",
      "business_impact_score": 8,
      "compliance_relevance": [
        "SOC2",
        "PCI-DSS",
        "ISO27001"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "database_access",
        "malicious_sql_queries"
      ],
      "mitigation_strategies": [
        "Set disabled_alerts = [] to enable all alerts",
        "Configure proper storage for alert logs",
        "Set appropriate retention_days",
        "Integrate with SIEM systems"
      ],
      "code_patterns": {
        "vulnerable_pattern": "azurerm_mssql_server_security_alert_policy with disabled_alerts containing critical types",
        "secure_pattern": "azurerm_mssql_server_security_alert_policy with disabled_alerts = []"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "monitoring_detection",
        "severity_numeric": 6.5,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AZURE-MONITOR-CAPTURE_ALL_ACTIVITIES",
      "trivy_rule_info": {
        "original_file": "capture_all_activities.yaml",
        "service_category": "monitor",
        "source_url": "https://github.com/aquasecurity/trivy-checks/blob/main/checks/cloud/azure/monitor/capture_all_activities.yaml"
      },
      "vulnerability_class": "audit_logging",
      "detection_difficulty": "medium",
      "remediation_effort": "low",
      "business_impact_score": 7,
      "compliance_relevance": [
        "GDPR",
        "SOC2",
        "PCI-DSS",
        "HIPAA"
      ],
      "attack_vector": "local",
      "prerequisites": [
        "administrative_access",
        "ability_to_modify_resources"
      ],
      "mitigation_strategies": [
        "Configure categories = ['Action', 'Delete', 'Write']",
        "Enable comprehensive activity logging",
        "Set appropriate retention policies",
        "Implement log analysis and alerting"
      ],
      "code_patterns": {
        "vulnerable_pattern": "azurerm_monitor_log_profile with categories = []",
        "secure_pattern": "azurerm_monitor_log_profile with categories = ['Action', 'Delete', 'Write']"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "audit_logging",
        "severity_numeric": 6.0,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AZURE-STORAGE-ALLOW_MICROSOFT_SERVICE_BYPASS",
      "trivy_rule_info": {
        "original_file": "allow_microsoft_service_bypass.yaml",
        "service_category": "storage",
        "source_url": "https://github.com/aquasecurity/trivy-checks/blob/main/checks/cloud/azure/storage/allow_microsoft_service_bypass.yaml"
      },
      "vulnerability_class": "network_access_control",
      "detection_difficulty": "hard",
      "remediation_effort": "low",
      "business_impact_score": 6,
      "compliance_relevance": [
        "SOC2",
        "ISO27001"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "legitimate_azure_service_access_needed"
      ],
      "mitigation_strategies": [
        "Include 'AzureServices' in bypass array",
        "Configure appropriate network rules",
        "Balance security with functionality",
        "Monitor service access patterns"
      ],
      "code_patterns": {
        "vulnerable_pattern": "azurerm_storage_account network_rules bypass missing 'AzureServices'",
        "secure_pattern": "azurerm_storage_account network_rules bypass = ['Metrics', 'AzureServices']"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "network_access_control",
        "severity_numeric": 5.5,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AZURE-APPSERVICE-ACCOUNT_IDENTITY_REGISTERED",
      "trivy_rule_info": {
        "original_file": "account_identity_registered.yaml",
        "service_category": "appservice",
        "source_url": "https://github.com/aquasecurity/trivy-checks/blob/main/checks/cloud/azure/appservice/account_identity_registered.yaml"
      },
      "vulnerability_class": "identity_management",
      "detection_difficulty": "medium",
      "remediation_effort": "medium",
      "business_impact_score": 7,
      "compliance_relevance": [
        "SOC2",
        "ISO27001",
        "NIST"
      ],
      "attack_vector": "local",
      "prerequisites": [
        "access_to_stored_credentials",
        "application_compromise"
      ],
      "mitigation_strategies": [
        "Configure identity block with SystemAssigned or UserAssigned",
        "Use managed identities for Azure resource access",
        "Eliminate stored connection strings",
        "Implement least privilege access"
      ],
      "code_patterns": {
        "vulnerable_pattern": "azurerm_function_app without identity block",
        "secure_pattern": "azurerm_function_app with identity { type = 'SystemAssigned' }"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "identity_management",
        "severity_numeric": 6.5,
        "should_flag": true,
        "auto_remediable": false,
        "trivy_detectable": true
      }
    }
  ],
  "ml_metadata": {
    "suitable_for_tasks": [
      "vulnerability_detection",
      "severity_classification",
      "auto_remediation",
      "trivy_rule_matching",
      "compliance_assessment",
      "security_pattern_recognition"
    ],
    "data_splits": {
      "recommended_train": 0.7,
      "recommended_val": 0.15,
      "recommended_test": 0.15
    },
    "sampling_weight": 8,
    "annotation_confidence": "high",
    "requires_domain_knowledge": true,
    "trivy_integration": {
      "can_validate_with_trivy": true,
      "trivy_scan_command": "trivy config --format json --severity MEDIUM,HIGH,CRITICAL .",
      "expected_trivy_output": "8 medium severity findings across appservice, storage, database, and monitor services"
    }
  },
  "educational_metadata": {
    "learning_objectives": [
      "Understanding Azure security best practices through Trivy rule enforcement",
      "Learning to identify transport security vulnerabilities in cloud infrastructure",
      "Recognizing the importance of proper authentication and identity management",
      "Understanding compliance requirements and audit logging needs",
      "Learning how Trivy detects common Azure misconfigurations"
    ],
    "prerequisite_knowledge": [
      "Basic Azure services knowledge",
      "Terraform syntax understanding",
      "Security fundamentals",
      "TLS/SSL concepts",
      "Identity and access management principles"
    ],
    "difficulty_level": "intermediate",
    "estimated_review_time": "45",
    "key_takeaways": [
      "Always enforce HTTPS for web applications and APIs",
      "Use TLS 1.2 or higher for all encrypted communications",
      "Enable comprehensive threat detection and monitoring",
      "Implement proper authentication for all services",
      "Use managed identities instead of stored credentials",
      "Configure appropriate network access controls",
      "Maintain comprehensive audit logs for compliance"
    ],
    "trivy_learning_value": {
      "demonstrates_trivy_capabilities": true,
      "real_world_applicability": "high",
      "rule_complexity": "moderate"
    }
  },
  "computed_metrics": {
    "total_vulnerabilities": 8,
    "unique_rule_ids": 8,
    "has_critical_vulnerabilities": false,
    "cloud_provider": "azure",
    "language": "terraform",
    "component_count": 6,
    "file_count": 4,
    "service_categories": [
      "database",
      "storage",
      "monitor",
      "appservice"
    ]
  },
  "dataset_metadata": {
    "project_id": "azure_disaster_recovery_platform",
    "generation_timestamp": "2025-08-06T22:32:42.105062",
    "version": "1.0",
    "data_quality": "high"
  }
}