{
  "project_labels": {
    "project_id": "fintech-trading-platform",
    "overall_security_posture": "vulnerable",
    "vulnerability_count": {
      "total": 7,
      "by_severity": {
        "critical": 0,
        "high": 4,
        "medium": 3
      },
      "by_type": {
        "encryption": 3,
        "access_control": 2,
        "network": 2
      },
      "by_trivy_service": {
        "appservice": 2,
        "database": 2,
        "storage": 1,
        "network": 1,
        "keyvault": 1
      }
    },
    "complexity_score": 8,
    "realism_score": 9,
    "educational_value": 9,
    "trivy_coverage": {
      "rules_represented": [
        "AZURE-APPSERVICE-USE_SECURE_TLS_POLICY",
        "AZURE-DATABASE-THREAT_ALERT_EMAIL_TO_OWNER",
        "AZURE-STORAGE-DEFAULT_ACTION_DENY",
        "AZURE-APPSERVICE-ENFORCE_HTTPS",
        "AZURE-NETWORK-NO_PUBLIC_INGRESS",
        "AZURE-KEYVAULT-SPECIFY_NETWORK_ACL",
        "AZURE-DATABASE-SECURE_TLS_POLICY"
      ],
      "services_covered": [
        "appservice",
        "database",
        "storage",
        "network",
        "keyvault"
      ],
      "detection_accuracy": "95%"
    }
  },
  "vulnerability_labels": [
    {
      "rule_id": "AZURE-APPSERVICE-USE_SECURE_TLS_POLICY",
      "trivy_rule_info": {
        "original_file": "use_secure_tls_policy.yaml",
        "service_category": "appservice",
        "source_url": "https://github.com/aquasecurity/trivy-checks/blob/main/checks/cloud/azure/appservice/use_secure_tls_policy.yaml"
      },
      "vulnerability_class": "cryptographic_weakness",
      "detection_difficulty": "easy",
      "remediation_effort": "low",
      "business_impact_score": 8,
      "compliance_relevance": [
        "PCI-DSS",
        "SOX",
        "GDPR"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "network_access_to_service",
        "tls_downgrade_capability"
      ],
      "mitigation_strategies": [
        "set_minimum_tls_version_1_2",
        "disable_legacy_protocols"
      ],
      "code_patterns": {
        "vulnerable_pattern": "min_tls_version = \"1.0\"",
        "secure_pattern": "min_tls_version = \"1.2\""
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "encryption",
        "severity_numeric": 7.5,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AZURE-DATABASE-THREAT_ALERT_EMAIL_TO_OWNER",
      "trivy_rule_info": {
        "original_file": "threat_alert_email_to_owner.yaml",
        "service_category": "database",
        "source_url": "https://github.com/aquasecurity/trivy-checks/blob/main/checks/cloud/azure/database/threat_alert_email_to_owner.yaml"
      },
      "vulnerability_class": "monitoring_deficiency",
      "detection_difficulty": "easy",
      "remediation_effort": "low",
      "business_impact_score": 6,
      "compliance_relevance": [
        "SOX",
        "Financial_Regulatory_Standards"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "database_access",
        "attack_persistence"
      ],
      "mitigation_strategies": [
        "enable_admin_email_alerts",
        "configure_security_monitoring"
      ],
      "code_patterns": {
        "vulnerable_pattern": "email_account_admins = false",
        "secure_pattern": "email_account_admins = true"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "monitoring",
        "severity_numeric": 5.5,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AZURE-STORAGE-DEFAULT_ACTION_DENY",
      "trivy_rule_info": {
        "original_file": "default_action_deny.yaml",
        "service_category": "storage",
        "source_url": "https://github.com/aquasecurity/trivy-checks/blob/main/checks/cloud/azure/storage/default_action_deny.yaml"
      },
      "vulnerability_class": "access_control_weakness",
      "detection_difficulty": "easy",
      "remediation_effort": "medium",
      "business_impact_score": 8,
      "compliance_relevance": [
        "PCI-DSS",
        "SOX",
        "GDPR"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "network_connectivity",
        "storage_account_discovery"
      ],
      "mitigation_strategies": [
        "set_default_action_deny",
        "configure_network_acls",
        "implement_ip_restrictions"
      ],
      "code_patterns": {
        "vulnerable_pattern": "default_action = \"Allow\"",
        "secure_pattern": "default_action = \"Deny\""
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "access_control",
        "severity_numeric": 8.0,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AZURE-APPSERVICE-ENFORCE_HTTPS",
      "trivy_rule_info": {
        "original_file": "enforce_https.yaml",
        "service_category": "appservice",
        "source_url": "https://github.com/aquasecurity/trivy-checks/blob/main/checks/cloud/azure/appservice/enforce_https.yaml"
      },
      "vulnerability_class": "data_exposure",
      "detection_difficulty": "easy",
      "remediation_effort": "low",
      "business_impact_score": 9,
      "compliance_relevance": [
        "PCI-DSS",
        "SOX",
        "GDPR"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "network_interception_capability",
        "unencrypted_traffic"
      ],
      "mitigation_strategies": [
        "enable_https_only",
        "redirect_http_to_https"
      ],
      "code_patterns": {
        "vulnerable_pattern": "# https_only setting missing",
        "secure_pattern": "https_only = true"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "encryption",
        "severity_numeric": 8.5,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AZURE-NETWORK-NO_PUBLIC_INGRESS",
      "trivy_rule_info": {
        "original_file": "no_public_ingress.yaml",
        "service_category": "network",
        "source_url": "https://github.com/aquasecurity/trivy-checks/blob/main/checks/cloud/azure/network/no_public_ingress.yaml"
      },
      "vulnerability_class": "network_exposure",
      "detection_difficulty": "easy",
      "remediation_effort": "medium",
      "business_impact_score": 9,
      "compliance_relevance": [
        "PCI-DSS",
        "SOX"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "internet_connectivity",
        "port_scanning_capability"
      ],
      "mitigation_strategies": [
        "restrict_source_ip_ranges",
        "implement_network_segmentation",
        "use_private_endpoints"
      ],
      "code_patterns": {
        "vulnerable_pattern": "source_address_prefix = \"0.0.0.0/0\"",
        "secure_pattern": "source_address_prefix = \"10.0.0.0/16\""
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "network",
        "severity_numeric": 8.5,
        "should_flag": true,
        "auto_remediable": false,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AZURE-KEYVAULT-SPECIFY_NETWORK_ACL",
      "trivy_rule_info": {
        "original_file": "specify_network_acl.yaml",
        "service_category": "keyvault",
        "source_url": "https://github.com/aquasecurity/trivy-checks/blob/main/checks/cloud/azure/keyvault/specify_network_acl.yaml"
      },
      "vulnerability_class": "secrets_exposure",
      "detection_difficulty": "easy",
      "remediation_effort": "medium",
      "business_impact_score": 7,
      "compliance_relevance": [
        "PCI-DSS",
        "SOX"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "network_access",
        "keyvault_discovery",
        "authentication_bypass"
      ],
      "mitigation_strategies": [
        "configure_network_acls",
        "enable_private_endpoints",
        "restrict_ip_access"
      ],
      "code_patterns": {
        "vulnerable_pattern": "# network_acls block missing",
        "secure_pattern": "network_acls { default_action = \"Deny\" }"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "access_control",
        "severity_numeric": 6.0,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AZURE-DATABASE-SECURE_TLS_POLICY",
      "trivy_rule_info": {
        "original_file": "secure_tls_policy.yaml",
        "service_category": "database",
        "source_url": "https://github.com/aquasecurity/trivy-checks/blob/main/checks/cloud/azure/database/secure_tls_policy.yaml"
      },
      "vulnerability_class": "cryptographic_weakness",
      "detection_difficulty": "easy",
      "remediation_effort": "low",
      "business_impact_score": 7,
      "compliance_relevance": [
        "PCI-DSS",
        "SOX"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "database_connection_capability",
        "tls_downgrade_attack"
      ],
      "mitigation_strategies": [
        "upgrade_minimum_tls_version",
        "disable_legacy_protocols"
      ],
      "code_patterns": {
        "vulnerable_pattern": "minimum_tls_version = \"1.1\"",
        "secure_pattern": "minimum_tls_version = \"1.2\""
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "encryption",
        "severity_numeric": 6.5,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    }
  ],
  "ml_metadata": {
    "suitable_for_tasks": [
      "vulnerability_detection",
      "severity_classification",
      "auto_remediation",
      "trivy_rule_matching",
      "compliance_assessment",
      "security_posture_scoring"
    ],
    "data_splits": {
      "recommended_train": 0.7,
      "recommended_val": 0.15,
      "recommended_test": 0.15
    },
    "sampling_weight": 9,
    "annotation_confidence": "high",
    "requires_domain_knowledge": true,
    "trivy_integration": {
      "can_validate_with_trivy": true,
      "trivy_scan_command": "trivy config --format json --severity HIGH,MEDIUM .",
      "expected_trivy_output": "7_vulnerabilities_detected_across_azure_services"
    }
  },
  "educational_metadata": {
    "learning_objectives": [
      "understand_azure_security_misconfigurations",
      "learn_trivy_detection_capabilities",
      "practice_iac_security_remediation",
      "recognize_financial_sector_compliance_requirements",
      "master_terraform_security_patterns"
    ],
    "prerequisite_knowledge": [
      "basic_terraform_syntax",
      "azure_services_fundamentals",
      "network_security_concepts",
      "encryption_and_tls_basics"
    ],
    "difficulty_level": "intermediate",
    "estimated_review_time": "45",
    "key_takeaways": [
      "always_enforce_latest_tls_versions",
      "implement_network_access_controls_by_default",
      "enable_security_monitoring_and_alerting",
      "use_principle_of_least_privilege_for_network_access",
      "trivy_provides_comprehensive_iac_security_scanning"
    ],
    "trivy_learning_value": {
      "demonstrates_trivy_capabilities": true,
      "real_world_applicability": "high",
      "rule_complexity": "moderate"
    }
  },
  "computed_metrics": {
    "total_vulnerabilities": 7,
    "unique_rule_ids": 7,
    "has_critical_vulnerabilities": false,
    "cloud_provider": "azure",
    "language": "terraform",
    "component_count": 7,
    "file_count": 4,
    "service_categories": [
      "storage",
      "appservice",
      "network",
      "database",
      "keyvault"
    ]
  },
  "dataset_metadata": {
    "project_id": "fintech-trading-platform",
    "generation_timestamp": "2025-08-06T22:05:47.199144",
    "version": "1.0",
    "data_quality": "high"
  }
}