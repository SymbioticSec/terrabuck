{
  "project_labels": {
    "project_id": "corporate-intranet-platform",
    "overall_security_posture": "vulnerable",
    "vulnerability_count": {
      "total": 7,
      "by_severity": {
        "critical": 0,
        "high": 0,
        "medium": 7
      },
      "by_type": {
        "access_control": 2,
        "encryption": 2,
        "audit_logging": 2,
        "network_security": 1
      },
      "by_trivy_service": {
        "storage": 2,
        "appservice": 2,
        "database": 2,
        "network": 1
      }
    },
    "complexity_score": 7,
    "realism_score": 9,
    "educational_value": 8,
    "trivy_coverage": {
      "rules_represented": [
        "AZURE-DATABASE-ENABLE_AUDIT",
        "AZURE-APPSERVICE-ACCOUNT_IDENTITY_REGISTERED",
        "AZURE-STORAGE-NO_PUBLIC_ACCESS",
        "AZURE-STORAGE-USE_SECURE_TLS_POLICY",
        "AZURE-APPSERVICE-USE_SECURE_TLS_POLICY",
        "AZURE-NETWORK-NO_PUBLIC_EGRESS",
        "AZURE-DATABASE-ALL_THREAT_ALERTS_ENABLED"
      ],
      "services_covered": [
        "storage",
        "appservice",
        "database",
        "network"
      ],
      "detection_accuracy": "95%"
    }
  },
  "vulnerability_labels": [
    {
      "rule_id": "AZURE-DATABASE-ENABLE_AUDIT",
      "trivy_rule_info": {
        "original_file": "enable_audit.yaml",
        "service_category": "database",
        "source_url": "https://github.com/aquasecurity/trivy-checks/tree/main/checks/cloud/azure/database"
      },
      "vulnerability_class": "audit_logging",
      "detection_difficulty": "easy",
      "remediation_effort": "low",
      "business_impact_score": 7,
      "compliance_relevance": [
        "GDPR",
        "SOC2",
        "HIPAA",
        "PCI-DSS"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "database_access",
        "lack_of_monitoring"
      ],
      "mitigation_strategies": [
        "enable_extended_auditing_policy",
        "configure_audit_log_retention",
        "setup_storage_account_for_logs"
      ],
      "code_patterns": {
        "vulnerable_pattern": "azurerm_sql_server without azurerm_mssql_server_extended_auditing_policy",
        "secure_pattern": "azurerm_mssql_server_extended_auditing_policy with storage_endpoint configured"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "audit_logging",
        "severity_numeric": 6.5,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AZURE-APPSERVICE-ACCOUNT_IDENTITY_REGISTERED",
      "trivy_rule_info": {
        "original_file": "account_identity_registered.yaml",
        "service_category": "appservice",
        "source_url": "https://github.com/aquasecurity/trivy-checks/tree/main/checks/cloud/azure/appservice"
      },
      "vulnerability_class": "access_control",
      "detection_difficulty": "easy",
      "remediation_effort": "low",
      "business_impact_score": 6,
      "compliance_relevance": [
        "SOC2",
        "ISO27001"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "credential_exposure",
        "connection_string_access"
      ],
      "mitigation_strategies": [
        "enable_managed_identity",
        "remove_connection_strings",
        "configure_rbac_permissions"
      ],
      "code_patterns": {
        "vulnerable_pattern": "azurerm_app_service without identity block",
        "secure_pattern": "azurerm_app_service with identity { type = 'SystemAssigned' }"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "access_control",
        "severity_numeric": 6.0,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AZURE-STORAGE-NO_PUBLIC_ACCESS",
      "trivy_rule_info": {
        "original_file": "no_public_access.yaml",
        "service_category": "storage",
        "source_url": "https://github.com/aquasecurity/trivy-checks/tree/main/checks/cloud/azure/storage"
      },
      "vulnerability_class": "access_control",
      "detection_difficulty": "easy",
      "remediation_effort": "low",
      "business_impact_score": 9,
      "compliance_relevance": [
        "GDPR",
        "SOC2",
        "PCI-DSS",
        "HIPAA"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "internet_access",
        "knowledge_of_container_urls"
      ],
      "mitigation_strategies": [
        "set_container_access_to_private",
        "implement_sas_tokens",
        "configure_network_restrictions"
      ],
      "code_patterns": {
        "vulnerable_pattern": "container_access_type = 'blob' or 'container'",
        "secure_pattern": "container_access_type = 'private'"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "access_control",
        "severity_numeric": 8.5,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AZURE-STORAGE-USE_SECURE_TLS_POLICY",
      "trivy_rule_info": {
        "original_file": "use_secure_tls_policy.yaml",
        "service_category": "storage",
        "source_url": "https://github.com/aquasecurity/trivy-checks/tree/main/checks/cloud/azure/storage"
      },
      "vulnerability_class": "encryption",
      "detection_difficulty": "easy",
      "remediation_effort": "low",
      "business_impact_score": 6,
      "compliance_relevance": [
        "PCI-DSS",
        "SOC2",
        "ISO27001"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "man_in_the_middle_position",
        "tls_downgrade_capability"
      ],
      "mitigation_strategies": [
        "set_min_tls_version_to_1_2",
        "disable_legacy_protocols",
        "implement_hsts_headers"
      ],
      "code_patterns": {
        "vulnerable_pattern": "min_tls_version = 'TLS1_0' or missing property",
        "secure_pattern": "min_tls_version = 'TLS1_2'"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "encryption",
        "severity_numeric": 6.0,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AZURE-APPSERVICE-USE_SECURE_TLS_POLICY",
      "trivy_rule_info": {
        "original_file": "use_secure_tls_policy.yaml",
        "service_category": "appservice",
        "source_url": "https://github.com/aquasecurity/trivy-checks/tree/main/checks/cloud/azure/appservice"
      },
      "vulnerability_class": "encryption",
      "detection_difficulty": "easy",
      "remediation_effort": "low",
      "business_impact_score": 7,
      "compliance_relevance": [
        "PCI-DSS",
        "SOC2",
        "GDPR"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "network_interception_capability",
        "protocol_downgrade_attack"
      ],
      "mitigation_strategies": [
        "configure_min_tls_version_1_2",
        "enable_https_only",
        "implement_security_headers"
      ],
      "code_patterns": {
        "vulnerable_pattern": "site_config { min_tls_version = '1.0' }",
        "secure_pattern": "site_config { min_tls_version = '1.2' }"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "encryption",
        "severity_numeric": 6.5,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AZURE-NETWORK-NO_PUBLIC_EGRESS",
      "trivy_rule_info": {
        "original_file": "no_public_egress.yaml",
        "service_category": "network",
        "source_url": "https://github.com/aquasecurity/trivy-checks/tree/main/checks/cloud/azure/network"
      },
      "vulnerability_class": "network_security",
      "detection_difficulty": "medium",
      "remediation_effort": "medium",
      "business_impact_score": 7,
      "compliance_relevance": [
        "SOC2",
        "ISO27001",
        "NIST"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "compromised_internal_resource",
        "data_exfiltration_tools"
      ],
      "mitigation_strategies": [
        "restrict_outbound_destinations",
        "implement_application_layer_filtering",
        "use_service_endpoints"
      ],
      "code_patterns": {
        "vulnerable_pattern": "destination_address_prefix = '0.0.0.0/0' with access = 'Allow'",
        "secure_pattern": "destination_address_prefix = specific IP ranges or service tags"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "network_security",
        "severity_numeric": 6.5,
        "should_flag": true,
        "auto_remediable": false,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AZURE-DATABASE-ALL_THREAT_ALERTS_ENABLED",
      "trivy_rule_info": {
        "original_file": "all_threat_alerts_enabled.yaml",
        "service_category": "database",
        "source_url": "https://github.com/aquasecurity/trivy-checks/tree/main/checks/cloud/azure/database"
      },
      "vulnerability_class": "audit_logging",
      "detection_difficulty": "easy",
      "remediation_effort": "low",
      "business_impact_score": 8,
      "compliance_relevance": [
        "SOC2",
        "PCI-DSS",
        "GDPR"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "database_access",
        "sql_injection_capability"
      ],
      "mitigation_strategies": [
        "enable_all_threat_detection_alerts",
        "configure_alert_notifications",
        "implement_response_procedures"
      ],
      "code_patterns": {
        "vulnerable_pattern": "disabled_alerts containing 'Sql_Injection' or 'Data_Exfiltration'",
        "secure_pattern": "disabled_alerts = [] (empty array)"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "audit_logging",
        "severity_numeric": 7.5,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    }
  ],
  "ml_metadata": {
    "suitable_for_tasks": [
      "vulnerability_detection",
      "severity_classification",
      "auto_remediation",
      "trivy_rule_matching",
      "compliance_assessment",
      "security_posture_scoring"
    ],
    "data_splits": {
      "recommended_train": 0.7,
      "recommended_val": 0.15,
      "recommended_test": 0.15
    },
    "sampling_weight": 8,
    "annotation_confidence": "high",
    "requires_domain_knowledge": true,
    "trivy_integration": {
      "can_validate_with_trivy": true,
      "trivy_scan_command": "trivy config --format json --severity MEDIUM,HIGH,CRITICAL .",
      "expected_trivy_output": "7 medium severity findings across storage, appservice, database, and network categories"
    }
  },
  "educational_metadata": {
    "learning_objectives": [
      "understand_azure_security_best_practices",
      "learn_trivy_security_scanning_capabilities",
      "recognize_common_iac_security_misconfigurations",
      "practice_vulnerability_remediation_techniques",
      "understand_compliance_requirements_mapping"
    ],
    "prerequisite_knowledge": [
      "basic_azure_services_knowledge",
      "infrastructure_as_code_concepts",
      "terraform_or_arm_template_syntax",
      "network_security_fundamentals"
    ],
    "difficulty_level": "intermediate",
    "estimated_review_time": 45,
    "key_takeaways": [
      "always_enable_audit_logging_for_databases",
      "use_managed_identities_instead_of_connection_strings",
      "never_allow_public_access_to_storage_containers",
      "enforce_modern_tls_versions_across_all_services",
      "restrict_network_egress_to_necessary_destinations",
      "enable_comprehensive_threat_detection_alerts"
    ],
    "trivy_learning_value": {
      "demonstrates_trivy_capabilities": true,
      "real_world_applicability": "high",
      "rule_complexity": "moderate"
    }
  },
  "computed_metrics": {
    "total_vulnerabilities": 7,
    "unique_rule_ids": 7,
    "has_critical_vulnerabilities": false,
    "cloud_provider": "azure",
    "language": "arm_template",
    "component_count": 7,
    "file_count": 4,
    "service_categories": [
      "storage",
      "network",
      "appservice",
      "database"
    ]
  },
  "dataset_metadata": {
    "project_id": "corporate-intranet-platform",
    "generation_timestamp": "2025-08-08T17:18:41.625312",
    "version": "1.0",
    "data_quality": "high"
  }
}