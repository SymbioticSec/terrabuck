{
  "project_labels": {
    "project_id": "azure_digital_marketing_automation",
    "overall_security_posture": "vulnerable",
    "vulnerability_count": {
      "total": 7,
      "by_severity": {
        "critical": 0,
        "high": 0,
        "medium": 7
      },
      "by_type": {
        "access_control": 2,
        "encryption": 3,
        "network": 1,
        "monitoring": 1
      },
      "by_trivy_service": {
        "appservice": 2,
        "storage": 2,
        "database": 2,
        "network": 1
      }
    },
    "complexity_score": 7,
    "realism_score": 9,
    "educational_value": 9,
    "trivy_coverage": {
      "rules_represented": [
        "AZURE-APPSERVICE-ENFORCE_HTTPS",
        "AZURE-STORAGE-USE_SECURE_TLS_POLICY",
        "AZURE-DATABASE-NO_PUBLIC_FIREWALL_ACCESS",
        "AZURE-DATABASE-ALL_THREAT_ALERTS_ENABLED",
        "AZURE-NETWORK-NO_PUBLIC_INGRESS",
        "AZURE-STORAGE-QUEUE_SERVICES_LOGGING_ENABLED",
        "AZURE-APPSERVICE-USE_SECURE_TLS_POLICY"
      ],
      "services_covered": [
        "appservice",
        "storage",
        "database",
        "network"
      ],
      "detection_accuracy": "95%"
    }
  },
  "vulnerability_labels": [
    {
      "rule_id": "AZURE-APPSERVICE-ENFORCE_HTTPS",
      "trivy_rule_info": {
        "original_file": "enforce_https.yaml",
        "service_category": "appservice",
        "source_url": "https://github.com/aquasecurity/trivy-checks/tree/main/checks/cloud/azure/appservice"
      },
      "vulnerability_class": "encryption_in_transit",
      "detection_difficulty": "easy",
      "remediation_effort": "low",
      "business_impact_score": 7,
      "compliance_relevance": [
        "GDPR",
        "SOC2",
        "PCI-DSS"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "network_access_to_application",
        "ability_to_intercept_traffic"
      ],
      "mitigation_strategies": [
        "set_https_only_true",
        "configure_ssl_certificates",
        "redirect_http_to_https"
      ],
      "code_patterns": {
        "vulnerable_pattern": "azurerm_app_service without https_only = true",
        "secure_pattern": "azurerm_app_service with https_only = true"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "encryption_in_transit",
        "severity_numeric": 6.5,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AZURE-STORAGE-USE_SECURE_TLS_POLICY",
      "trivy_rule_info": {
        "original_file": "use_secure_tls_policy.yaml",
        "service_category": "storage",
        "source_url": "https://github.com/aquasecurity/trivy-checks/tree/main/checks/cloud/azure/storage"
      },
      "vulnerability_class": "weak_cryptography",
      "detection_difficulty": "easy",
      "remediation_effort": "low",
      "business_impact_score": 6,
      "compliance_relevance": [
        "GDPR",
        "SOC2",
        "HIPAA"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "network_access_to_storage",
        "tls_downgrade_capability"
      ],
      "mitigation_strategies": [
        "set_min_tls_version_1_2",
        "disable_older_tls_versions",
        "enforce_strong_ciphers"
      ],
      "code_patterns": {
        "vulnerable_pattern": "min_tls_version = \"TLS1_0\" or \"TLS1_1\"",
        "secure_pattern": "min_tls_version = \"TLS1_2\""
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "weak_cryptography",
        "severity_numeric": 6.0,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AZURE-DATABASE-NO_PUBLIC_FIREWALL_ACCESS",
      "trivy_rule_info": {
        "original_file": "no_public_firewall_access.yaml",
        "service_category": "database",
        "source_url": "https://github.com/aquasecurity/trivy-checks/tree/main/checks/cloud/azure/database"
      },
      "vulnerability_class": "excessive_network_access",
      "detection_difficulty": "easy",
      "remediation_effort": "medium",
      "business_impact_score": 9,
      "compliance_relevance": [
        "GDPR",
        "SOC2",
        "PCI-DSS",
        "HIPAA"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "internet_access",
        "database_credentials"
      ],
      "mitigation_strategies": [
        "restrict_firewall_rules",
        "use_private_endpoints",
        "implement_vnet_integration"
      ],
      "code_patterns": {
        "vulnerable_pattern": "start_ip_address = \"0.0.0.0\" and end_ip_address = \"255.255.255.255\"",
        "secure_pattern": "specific IP ranges or private network access only"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "access_control",
        "severity_numeric": 8.5,
        "should_flag": true,
        "auto_remediable": false,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AZURE-DATABASE-ALL_THREAT_ALERTS_ENABLED",
      "trivy_rule_info": {
        "original_file": "all_threat_alerts_enabled.yaml",
        "service_category": "database",
        "source_url": "https://github.com/aquasecurity/trivy-checks/tree/main/checks/cloud/azure/database"
      },
      "vulnerability_class": "insufficient_monitoring",
      "detection_difficulty": "medium",
      "remediation_effort": "low",
      "business_impact_score": 7,
      "compliance_relevance": [
        "SOC2",
        "PCI-DSS",
        "NIST"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "database_access",
        "malicious_queries"
      ],
      "mitigation_strategies": [
        "enable_all_threat_alerts",
        "configure_alert_notifications",
        "set_up_siem_integration"
      ],
      "code_patterns": {
        "vulnerable_pattern": "disabled_alerts containing critical alert types",
        "secure_pattern": "disabled_alerts = [] (empty array)"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "monitoring",
        "severity_numeric": 6.5,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AZURE-NETWORK-NO_PUBLIC_INGRESS",
      "trivy_rule_info": {
        "original_file": "no_public_ingress.yaml",
        "service_category": "network",
        "source_url": "https://github.com/aquasecurity/trivy-checks/tree/main/checks/cloud/azure/network"
      },
      "vulnerability_class": "network_exposure",
      "detection_difficulty": "easy",
      "remediation_effort": "medium",
      "business_impact_score": 8,
      "compliance_relevance": [
        "SOC2",
        "PCI-DSS",
        "NIST"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "internet_access",
        "port_scanning_tools"
      ],
      "mitigation_strategies": [
        "restrict_source_ip_ranges",
        "use_application_gateway",
        "implement_private_networking"
      ],
      "code_patterns": {
        "vulnerable_pattern": "source_address_prefix = \"0.0.0.0/0\" for inbound rules",
        "secure_pattern": "specific IP ranges or private network prefixes"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "access_control",
        "severity_numeric": 7.5,
        "should_flag": true,
        "auto_remediable": false,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AZURE-STORAGE-QUEUE_SERVICES_LOGGING_ENABLED",
      "trivy_rule_info": {
        "original_file": "queue_services_logging_enabled.yaml",
        "service_category": "storage",
        "source_url": "https://github.com/aquasecurity/trivy-checks/tree/main/checks/cloud/azure/storage"
      },
      "vulnerability_class": "insufficient_logging",
      "detection_difficulty": "medium",
      "remediation_effort": "low",
      "business_impact_score": 5,
      "compliance_relevance": [
        "SOC2",
        "PCI-DSS",
        "GDPR"
      ],
      "attack_vector": "local",
      "prerequisites": [
        "storage_account_access",
        "queue_operations"
      ],
      "mitigation_strategies": [
        "enable_queue_logging",
        "configure_retention_policies",
        "set_up_log_monitoring"
      ],
      "code_patterns": {
        "vulnerable_pattern": "queue_properties without logging configuration",
        "secure_pattern": "queue_properties with complete logging block"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "monitoring",
        "severity_numeric": 5.5,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AZURE-APPSERVICE-USE_SECURE_TLS_POLICY",
      "trivy_rule_info": {
        "original_file": "use_secure_tls_policy.yaml",
        "service_category": "appservice",
        "source_url": "https://github.com/aquasecurity/trivy-checks/tree/main/checks/cloud/azure/appservice"
      },
      "vulnerability_class": "weak_cryptography",
      "detection_difficulty": "easy",
      "remediation_effort": "low",
      "business_impact_score": 6,
      "compliance_relevance": [
        "GDPR",
        "SOC2",
        "PCI-DSS"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "network_access_to_application",
        "tls_downgrade_capability"
      ],
      "mitigation_strategies": [
        "set_min_tls_version_1_2",
        "disable_weak_ciphers",
        "enforce_strong_ssl_policies"
      ],
      "code_patterns": {
        "vulnerable_pattern": "site_config { min_tls_version = \"1.0\" }",
        "secure_pattern": "site_config { min_tls_version = \"1.2\" }"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "encryption_in_transit",
        "severity_numeric": 6.0,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    }
  ],
  "ml_metadata": {
    "suitable_for_tasks": [
      "vulnerability_detection",
      "severity_classification",
      "auto_remediation",
      "trivy_rule_matching",
      "compliance_mapping",
      "security_posture_assessment"
    ],
    "data_splits": {
      "recommended_train": 0.7,
      "recommended_val": 0.15,
      "recommended_test": 0.15
    },
    "sampling_weight": 8,
    "annotation_confidence": "high",
    "requires_domain_knowledge": true,
    "trivy_integration": {
      "can_validate_with_trivy": true,
      "trivy_scan_command": "trivy config --format json --severity MEDIUM,HIGH,CRITICAL .",
      "expected_trivy_output": "7 medium severity findings across appservice, storage, database, and network services"
    }
  },
  "educational_metadata": {
    "learning_objectives": [
      "understand_azure_security_misconfigurations",
      "learn_trivy_security_scanning_capabilities",
      "recognize_common_cloud_security_patterns",
      "practice_terraform_security_best_practices",
      "understand_compliance_requirements_mapping"
    ],
    "prerequisite_knowledge": [
      "basic_azure_services_knowledge",
      "terraform_syntax_familiarity",
      "cloud_security_fundamentals",
      "networking_concepts"
    ],
    "difficulty_level": "intermediate",
    "estimated_review_time": 45,
    "key_takeaways": [
      "always_enforce_https_for_web_applications",
      "use_modern_tls_versions_for_encryption",
      "restrict_database_network_access",
      "enable_comprehensive_security_monitoring",
      "implement_defense_in_depth_networking",
      "maintain_audit_logs_for_compliance"
    ],
    "trivy_learning_value": {
      "demonstrates_trivy_capabilities": true,
      "real_world_applicability": "high",
      "rule_complexity": "moderate"
    }
  },
  "computed_metrics": {
    "total_vulnerabilities": 7,
    "unique_rule_ids": 7,
    "has_critical_vulnerabilities": false,
    "cloud_provider": "azure",
    "language": "arm_template",
    "component_count": 7,
    "file_count": 4,
    "service_categories": [
      "storage",
      "network",
      "appservice",
      "database"
    ]
  },
  "dataset_metadata": {
    "project_id": "azure_digital_marketing_automation",
    "generation_timestamp": "2025-08-08T17:48:30.656757",
    "version": "1.0",
    "data_quality": "medium"
  }
}