{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "environmentName": {
      "type": "string",
      "defaultValue": "prod",
      "metadata": {
        "description": "Environment name for resource naming"
      }
    },
    "sqlAdminUsername": {
      "type": "string",
      "defaultValue": "posadmin",
      "metadata": {
        "description": "SQL Server administrator username"
      }
    },
    "sqlAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "SQL Server administrator password"
      }
    },
    "appServicePlanSku": {
      "type": "string",
      "defaultValue": "S1",
      "metadata": {
        "description": "App Service Plan SKU"
      }
    }
  },
  "variables": {
    "resourcePrefix": "[concat('restaurant-pos-and-inventory-management-system-', parameters('environmentName'))]",
    "vnetName": "[concat(variables('resourcePrefix'), '-vnet')]",
    "publicSubnetName": "public-subnet",
    "privateSubnetName": "private-subnet",
    "dataSubnetName": "data-subnet",
    "nsgName": "[concat(variables('resourcePrefix'), '-nsg')]",
    "appGatewayName": "[concat(variables('resourcePrefix'), '-appgw')]",
    "appServicePlanName": "[concat(variables('resourcePrefix'), '-asp')]",
    "webAppName": "[concat(variables('resourcePrefix'), '-webapp')]",
    "apiAppName": "[concat(variables('resourcePrefix'), '-api')]",
    "functionAppName": "[concat(variables('resourcePrefix'), '-func')]",
    "sqlServerName": "[concat(variables('resourcePrefix'), '-sql')]",
    "sqlDatabaseName": "[concat(variables('resourcePrefix'), '-db')]",
    "inventoryStorageName": "[replace(concat(variables('resourcePrefix'), 'inventory'), '-', '')]",
    "transactionStorageName": "[replace(concat(variables('resourcePrefix'), 'transaction'), '-', '')]",
    "logAnalyticsName": "[concat(variables('resourcePrefix'), '-logs')]",
    "appInsightsName": "[concat(variables('resourcePrefix'), '-insights')]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2021-02-01",
      "name": "[variables('vnetName')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "RestaurantPOS"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "[variables('publicSubnetName')]",
            "properties": {
              "addressPrefix": "10.0.1.0/24"
            }
          },
          {
            "name": "[variables('privateSubnetName')]",
            "properties": {
              "addressPrefix": "10.0.2.0/24"
            }
          },
          {
            "name": "[variables('dataSubnetName')]",
            "properties": {
              "addressPrefix": "10.0.3.0/24"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2021-02-01",
      "name": "[variables('nsgName')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "RestaurantPOS"
      },
      "properties": {
        "securityRules": [
          {
            "name": "AllowHTTP",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowHTTPS",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 110,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowOutboundAll",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "0.0.0.0/0",
              "access": "Allow",
              "priority": 100,
              "direction": "Outbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2021-02-01",
      "name": "[concat(variables('appGatewayName'), '-pip')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "RestaurantPOS"
      },
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/applicationGateways",
      "apiVersion": "2021-02-01",
      "name": "[variables('appGatewayName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('appGatewayName'), '-pip'))]"
      ],
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "RestaurantPOS"
      },
      "properties": {
        "sku": {
          "name": "Standard_v2",
          "tier": "Standard_v2",
          "capacity": 2
        },
        "gatewayIPConfigurations": [
          {
            "name": "appGatewayIpConfig",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('publicSubnetName'))]"
              }
            }
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "appGatewayFrontendIP",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('appGatewayName'), '-pip'))]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "appGatewayFrontendPort",
            "properties": {
              "port": 80
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "appGatewayBackendPool",
            "properties": {}
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "appGatewayBackendHttpSettings",
            "properties": {
              "port": 80,
              "protocol": "Http",
              "cookieBasedAffinity": "Disabled"
            }
          }
        ],
        "httpListeners": [
          {
            "name": "appGatewayHttpListener",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', variables('appGatewayName'), 'appGatewayFrontendIP')]"
              },
              "frontendPort": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', variables('appGatewayName'), 'appGatewayFrontendPort')]"
              },
              "protocol": "Http"
            }
          }
        ],
        "requestRoutingRules": [
          {
            "name": "rule1",
            "properties": {
              "ruleType": "Basic",
              "httpListener": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', variables('appGatewayName'), 'appGatewayHttpListener')]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', variables('appGatewayName'), 'appGatewayBackendPool')]"
              },
              "backendHttpSettings": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', variables('appGatewayName'), 'appGatewayBackendHttpSettings')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-02-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "RestaurantPOS"
      },
      "sku": {
        "name": "[parameters('appServicePlanSku')]"
      },
      "properties": {
        "reserved": false
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[variables('webAppName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
      ],
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "RestaurantPOS",
        "Component": "pos_web_application"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled"
        }
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[variables('apiAppName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
      ],
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "RestaurantPOS",
        "Component": "pos_api_backend"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "name": "[variables('inventoryStorageName')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "RestaurantPOS",
        "Component": "inventory_storage"
      },
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": false,
        "encryption": {
          "services": {
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "name": "[variables('transactionStorageName')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "RestaurantPOS",
        "Component": "transaction_storage"
      },
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/networkRules",
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('transactionStorageName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('transactionStorageName'))]"
      ],
      "properties": {
        "bypass": "AzureServices",
        "virtualNetworkRules": [],
        "ipRules": [],
        "defaultAction": "Allow"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[variables('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('inventoryStorageName'))]"
      ],
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "RestaurantPOS",
        "Component": "payment_functions"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('inventoryStorageName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('inventoryStorageName')), '2021-04-01').keys[0].value)]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2021-02-01-preview",
      "name": "[variables('sqlServerName')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "RestaurantPOS",
        "Component": "pos_database"
      },
      "properties": {
        "administratorLogin": "[parameters('sqlAdminUsername')]",
        "administratorLoginPassword": "[parameters('sqlAdminPassword')]",
        "version": "12.0",
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2021-02-01-preview",
      "name": "[concat(variables('sqlServerName'), '/', variables('sqlDatabaseName'))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
      ],
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "RestaurantPOS"
      },
      "sku": {
        "name": "S0",
        "tier": "Standard"
      },
      "properties": {
        "collation": "SQL_Latin1_General_CP1_CI_AS"
      }
    },
    {
      "type": "Microsoft.Sql/servers/securityAlertPolicies",
      "apiVersion": "2021-02-01-preview",
      "name": "[concat(variables('sqlServerName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('transactionStorageName'))]"
      ],
      "properties": {
        "state": "Enabled",
        "storageEndpoint": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('transactionStorageName'))).primaryEndpoints.blob]",
        "storageAccountAccessKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('transactionStorageName')), '2021-04-01').keys[0].value]",
        "emailAccountAdmins": false,
        "emailAddresses": [],
        "disabledAlerts": [],
        "retentionDays": 30
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2021-06-01",
      "name": "[variables('logAnalyticsName')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "RestaurantPOS"
      },
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('appInsightsName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]"
      ],
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "RestaurantPOS"
      },
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]"
      }
    },
    {
      "type": "Microsoft.Insights/activityLogAlerts",
      "apiVersion": "2020-10-01",
      "name": "[concat(variables('resourcePrefix'), '-activity-alert')]",
      "location": "Global",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "RestaurantPOS"
      },
      "properties": {
        "scopes": [
          "[resourceGroup().id]"
        ],
        "condition": {
          "allOf": [
            {
              "field": "category",
              "equals": "Administrative"
            }
          ]
        },
        "actions": {
          "actionGroups": []
        },
        "enabled": true,
        "description": "Monitor administrative activities"
      }
    }
  ],
  "outputs": {
    "applicationGatewayPublicIP": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', concat(variables('appGatewayName'), '-pip'))).ipAddress]"
    },
    "webAppUrl": {
      "type": "string",
      "value": "[concat('https://', reference(resourceId('Microsoft.Web/sites', variables('webAppName'))).defaultHostName)]"
    },
    "apiAppUrl": {
      "type": "string",
      "value": "[concat('https://', reference(resourceId('Microsoft.Web/sites', variables('apiAppName'))).defaultHostName)]"
    },
    "sqlServerFqdn": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Sql/servers', variables('sqlServerName'))).fullyQualifiedDomainName]"
    },
    "inventoryStorageEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('inventoryStorageName'))).primaryEndpoints.blob]"
    },
    "transactionStorageEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('transactionStorageName'))).primaryEndpoints.blob]"
    }
  }
}