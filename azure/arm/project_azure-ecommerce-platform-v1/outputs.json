{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {},
  "variables": {},
  "resources": [],
  "outputs": {
    "appServiceUrl": {
      "type": "string",
      "value": "[concat('https://', variables('appServiceName'), '.azurewebsites.net')]",
      "metadata": {
        "description": "URL of the main web application"
      }
    },
    "applicationGatewayPublicIP": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))).ipAddress]",
      "metadata": {
        "description": "Public IP address of the Application Gateway"
      }
    },
    "sqlServerFqdn": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Sql/servers', variables('sqlServerName'))).fullyQualifiedDomainName]",
      "metadata": {
        "description": "Fully qualified domain name of the SQL Server"
      }
    },
    "storageAccountName": {
      "type": "string",
      "value": "[variables('storageAccountName')]",
      "metadata": {
        "description": "Name of the storage account for file storage"
      }
    },
    "redisCacheHostName": {
      "type": "string",
      "value": "[concat(variables('redisCacheName'), '.redis.cache.windows.net')]",
      "metadata": {
        "description": "Redis Cache hostname"
      }
    },
    "functionAppUrl": {
      "type": "string",
      "value": "[concat('https://', variables('functionAppName'), '.azurewebsites.net')]",
      "metadata": {
        "description": "URL of the payment processing function app"
      }
    },
    "applicationInsightsInstrumentationKey": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Insights/components', concat(variables('resourcePrefix'), '-app-insights'))).InstrumentationKey]",
      "metadata": {
        "description": "Application Insights instrumentation key"
      }
    },
    "resourceGroupName": {
      "type": "string",
      "value": "[resourceGroup().name]",
      "metadata": {
        "description": "Name of the resource group containing all resources"
      }
    }
  }
}