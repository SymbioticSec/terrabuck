{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "environmentName": {
      "type": "string",
      "defaultValue": "prod",
      "metadata": {
        "description": "Environment name (dev, test, prod)"
      }
    },
    "sqlAdminUsername": {
      "type": "string",
      "defaultValue": "scadaadmin",
      "metadata": {
        "description": "SQL Server administrator username"
      }
    },
    "sqlAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "SQL Server administrator password"
      }
    },
    "appServicePlanSku": {
      "type": "string",
      "defaultValue": "S1",
      "metadata": {
        "description": "App Service Plan SKU"
      }
    }
  },
  "variables": {
    "resourcePrefix": "[concat('smart-grid-scada-monitoring-platform-', parameters('environmentName'))]",
    "vnetName": "[concat(variables('resourcePrefix'), '-vnet')]",
    "otSubnetName": "[concat(variables('resourcePrefix'), '-ot-subnet')]",
    "processingSubnetName": "[concat(variables('resourcePrefix'), '-processing-subnet')]",
    "operatorSubnetName": "[concat(variables('resourcePrefix'), '-operator-subnet')]",
    "iotHubName": "[concat(variables('resourcePrefix'), '-iothub')]",
    "streamAnalyticsName": "[concat(variables('resourcePrefix'), '-stream-analytics')]",
    "sqlServerName": "[concat(variables('resourcePrefix'), '-sql-server')]",
    "sqlDatabaseName": "[concat(variables('resourcePrefix'), '-operational-db')]",
    "appServicePlanName": "[concat(variables('resourcePrefix'), '-app-plan')]",
    "appServiceName": "[concat(variables('resourcePrefix'), '-dashboard')]",
    "storageAccountName": "[replace(concat(variables('resourcePrefix'), 'storage'), '-', '')]",
    "logicAppName": "[concat(variables('resourcePrefix'), '-alerts')]",
    "nsgOtName": "[concat(variables('resourcePrefix'), '-ot-nsg')]",
    "nsgProcessingName": "[concat(variables('resourcePrefix'), '-processing-nsg')]",
    "nsgOperatorName": "[concat(variables('resourcePrefix'), '-operator-nsg')]",
    "keyVaultName": "[concat(variables('resourcePrefix'), '-kv')]",
    "securityCenterContactEmail": "security@utility-company.com"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2021-02-01",
      "name": "[variables('vnetName')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "Smart Grid SCADA Monitoring",
        "CriticalInfrastructure": "true"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "[variables('otSubnetName')]",
            "properties": {
              "addressPrefix": "10.0.1.0/24",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgOtName'))]"
              }
            }
          },
          {
            "name": "[variables('processingSubnetName')]",
            "properties": {
              "addressPrefix": "10.0.2.0/24",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgProcessingName'))]"
              }
            }
          },
          {
            "name": "[variables('operatorSubnetName')]",
            "properties": {
              "addressPrefix": "10.0.3.0/24",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgOperatorName'))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgOtName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgProcessingName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgOperatorName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2021-02-01",
      "name": "[variables('nsgOtName')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "SecurityZone": "OT-Ingestion"
      },
      "properties": {
        "securityRules": [
          {
            "name": "AllowIoTHubInbound",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "8883",
              "sourceAddressPrefix": "10.0.1.0/24",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2021-02-01",
      "name": "[variables('nsgProcessingName')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "SecurityZone": "Processing-Tier"
      },
      "properties": {
        "securityRules": [
          {
            "name": "AllowPublicInbound",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "0.0.0.0/0",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2021-02-01",
      "name": "[variables('nsgOperatorName')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "SecurityZone": "Operator-Access"
      },
      "properties": {
        "securityRules": [
          {
            "name": "AllowHTTPS",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "10.0.3.0/24",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Purpose": "Historical Data Storage"
      },
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "minimumTlsVersion": "TLS1_0",
        "supportsHttpsTrafficOnly": true,
        "allowBlobPublicAccess": false,
        "networkAcls": {
          "defaultAction": "Allow",
          "bypass": "AzureServices"
        }
      }
    },
    {
      "type": "Microsoft.Devices/IotHubs",
      "apiVersion": "2021-07-02",
      "name": "[variables('iotHubName')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Component": "SCADA Data Ingestion"
      },
      "sku": {
        "name": "S1",
        "capacity": 2
      },
      "properties": {
        "eventHubEndpoints": {
          "events": {
            "retentionTimeInDays": 7,
            "partitionCount": 4
          }
        },
        "routing": {
          "endpoints": {
            "storageContainers": [
              {
                "connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-04-01').keys[0].value)]",
                "containerName": "telemetry-data",
                "fileNameFormat": "{iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}",
                "batchFrequencyInSeconds": 60,
                "maxChunkSizeInBytes": 10485760,
                "encoding": "JSON",
                "name": "telemetryStorage"
              }
            ]
          },
          "routes": [
            {
              "name": "TelemetryToStorage",
              "source": "DeviceMessages",
              "condition": "true",
              "endpointNames": [
                "telemetryStorage"
              ],
              "isEnabled": true
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.StreamAnalytics/streamingjobs",
      "apiVersion": "2020-03-01",
      "name": "[variables('streamAnalyticsName')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Component": "Telemetry Processing"
      },
      "properties": {
        "sku": {
          "name": "Standard"
        },
        "outputErrorPolicy": "Stop",
        "eventsOutOfOrderPolicy": "Adjust",
        "eventsOutOfOrderMaxDelayInSeconds": 0,
        "eventsLateArrivalMaxDelayInSeconds": 5,
        "dataLocale": "en-US",
        "inputs": [
          {
            "name": "IoTHubInput",
            "properties": {
              "type": "Stream",
              "datasource": {
                "type": "Microsoft.Devices/IotHubs",
                "properties": {
                  "iotHubNamespace": "[variables('iotHubName')]",
                  "sharedAccessPolicyName": "iothubowner",
                  "sharedAccessPolicyKey": "[listkeys(resourceId('Microsoft.Devices/IoTHubs/IoTHubKeys', variables('iotHubName'), 'iothubowner'), '2021-07-02').primaryKey]",
                  "endpoint": "messages/events",
                  "consumerGroupName": "$Default"
                }
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Devices/IotHubs', variables('iotHubName'))]"
      ]
    },
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2021-11-01",
      "name": "[variables('sqlServerName')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Component": "Operational Database"
      },
      "properties": {
        "administratorLogin": "[parameters('sqlAdminUsername')]",
        "administratorLoginPassword": "[parameters('sqlAdminPassword')]",
        "version": "12.0",
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2021-11-01",
      "name": "[concat(variables('sqlServerName'), '/', variables('sqlDatabaseName'))]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "DataClassification": "Critical Infrastructure"
      },
      "sku": {
        "name": "S2",
        "tier": "Standard"
      },
      "properties": {
        "collation": "SQL_Latin1_General_CP1_CI_AS",
        "maxSizeBytes": 268435456000
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-02-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Component": "Operator Dashboard"
      },
      "sku": {
        "name": "[parameters('appServicePlanSku')]"
      },
      "properties": {
        "reserved": false
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[variables('appServiceName')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Component": "SCADA HMI Dashboard"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "minTlsVersion": "1.0",
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "14.15.0"
            },
            {
              "name": "SQL_CONNECTION_STRING",
              "value": "[concat('Server=tcp:', reference(resourceId('Microsoft.Sql/servers', variables('sqlServerName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('sqlDatabaseName'), ';Persist Security Info=False;User ID=', parameters('sqlAdminUsername'), ';Password=', parameters('sqlAdminPassword'), ';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.Sql/servers/databases', variables('sqlServerName'), variables('sqlDatabaseName'))]"
      ]
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "[variables('logicAppName')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Component": "Alert Notification System"
      },
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "triggers": {
            "manual": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "schema": {
                  "properties": {
                    "alertType": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "severity": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "actions": {
            "Send_email": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['office365']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/v2/Mail",
                "body": {
                  "To": "operators@utility-company.com",
                  "Subject": "SCADA Alert: @{triggerBody()?['alertType']}",
                  "Body": "@{triggerBody()?['message']}"
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2021-11-01-preview",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Purpose": "Secrets Management"
      },
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [],
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": true,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 90,
        "enableRbacAuthorization": true
      }
    },
    {
      "type": "Microsoft.Security/securityContacts",
      "apiVersion": "2020-01-01-preview",
      "name": "default",
      "properties": {
        "emails": "[variables('securityCenterContactEmail')]",
        "phone": "+1-555-UTILITY",
        "alertNotifications": {
          "state": "Off"
        },
        "notificationsByRole": {
          "state": "Off"
        }
      }
    },
    {
      "type": "Microsoft.Compute/disks",
      "apiVersion": "2021-12-01",
      "name": "[concat(variables('resourcePrefix'), '-processing-disk')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Component": "Telemetry Processing Storage"
      },
      "sku": {
        "name": "Premium_LRS"
      },
      "properties": {
        "diskSizeGB": 128,
        "creationData": {
          "createOption": "Empty"
        },
        "encryptionSettingsCollection": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.TimeSeriesInsights/environments",
      "apiVersion": "2020-05-15",
      "name": "[concat(variables('resourcePrefix'), '-tsi')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Component": "Historical Data Analytics"
      },
      "sku": {
        "name": "S1",
        "capacity": 1
      },
      "kind": "Standard",
      "properties": {
        "dataRetentionTime": "P30D",
        "storageLimitExceededBehavior": "PurgeOldData"
      }
    },
    {
      "type": "Microsoft.TimeSeriesInsights/environments/eventSources",
      "apiVersion": "2020-05-15",
      "name": "[concat(variables('resourcePrefix'), '-tsi', '/IoTHubEventSource')]",
      "properties": {
        "eventSourceResourceId": "[resourceId('Microsoft.Devices/IotHubs', variables('iotHubName'))]",
        "iotHubName": "[variables('iotHubName')]",
        "consumerGroupName": "$Default",
        "keyName": "iothubowner",
        "sharedAccessKey": "[listkeys(resourceId('Microsoft.Devices/IoTHubs/IoTHubKeys', variables('iotHubName'), 'iothubowner'), '2021-07-02').primaryKey]",
        "timestampPropertyName": "timestamp"
      },
      "dependsOn": [
        "[resourceId('Microsoft.TimeSeriesInsights/environments', concat(variables('resourcePrefix'), '-tsi'))]",
        "[resourceId('Microsoft.Devices/IotHubs', variables('iotHubName'))]"
      ]
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2021-12-01-preview",
      "name": "[concat(variables('resourcePrefix'), '-logs')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Purpose": "Centralized Logging"
      },
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 90,
        "features": {
          "enableLogAccessUsingOnlyResourcePermissions": true
        }
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[concat(variables('resourcePrefix'), '-insights')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Component": "Application Monitoring"
      },
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', concat(variables('resourcePrefix'), '-logs'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', concat(variables('resourcePrefix'), '-logs'))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2021-05-01",
      "name": "[concat(variables('resourcePrefix'), '-sql-pe')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Purpose": "Database Private Access"
      },
      "properties": {
        "subnet": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('processingSubnetName'))]"
        },
        "privateLinkServiceConnections": [
          {
            "name": "sqlConnection",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]",
              "groupIds": [
                "sqlServer"
              ]
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
        "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2020-06-01",
      "name": "privatelink.database.windows.net",
      "location": "global",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Purpose": "Private DNS Resolution"
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2020-06-01",
      "name": "privatelink.database.windows.net/vnet-link",
      "properties": {
        "registrationEnabled": false,
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.database.windows.net')]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-10-01-preview",
      "name": "[guid(resourceGroup().id, 'StreamAnalyticsContributor')]",
      "properties": {
        "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
        "principalId": "[reference(resourceId('Microsoft.StreamAnalytics/streamingjobs', variables('streamAnalyticsName')), '2020-03-01', 'Full').identity.principalId]",
        "scope": "[resourceGroup().id]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.StreamAnalytics/streamingjobs', variables('streamAnalyticsName'))]"
      ]
    }
  ],
  "outputs": {
    "iotHubConnectionString": {
      "type": "string",
      "value": "[concat('HostName=', reference(resourceId('Microsoft.Devices/IoTHubs', variables('iotHubName'))).hostName, ';SharedAccessKeyName=iothubowner;SharedAccessKey=', listkeys(resourceId('Microsoft.Devices/IoTHubs/IoTHubKeys', variables('iotHubName'), 'iothubowner'), '2021-07-02').primaryKey)]"
    },
    "dashboardUrl": {
      "type": "string",
      "value": "[concat('https://', reference(resourceId('Microsoft.Web/sites', variables('appServiceName'))).defaultHostName)]"
    },
    "sqlServerFqdn": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Sql/servers', variables('sqlServerName'))).fullyQualifiedDomainName]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[variables('storageAccountName')]"
    },
    "resourceGroupName": {
      "type": "string",
      "value": "[resourceGroup().name]"
    }
  }
}