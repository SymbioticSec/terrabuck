{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "environmentName": {
      "type": "string",
      "defaultValue": "prod",
      "metadata": {
        "description": "Environment name (dev, test, prod)"
      }
    },
    "sqlAdminUsername": {
      "type": "string",
      "defaultValue": "hradmin",
      "metadata": {
        "description": "SQL Server administrator username"
      }
    },
    "sqlAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "SQL Server administrator password"
      }
    },
    "appServicePlanSku": {
      "type": "string",
      "defaultValue": "S1",
      "metadata": {
        "description": "App Service Plan SKU"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "Storage account replication type"
      }
    }
  },
  "variables": {
    "resourcePrefix": "[concat('enterprise-hr-talent-management-platform-', parameters('environmentName'))]",
    "vnetName": "[concat(variables('resourcePrefix'), '-vnet')]",
    "publicSubnetName": "public-subnet",
    "privateSubnetName": "private-subnet",
    "dataSubnetName": "data-subnet",
    "nsgName": "[concat(variables('resourcePrefix'), '-nsg')]",
    "appGatewayName": "[concat(variables('resourcePrefix'), '-appgw')]",
    "appServicePlanName": "[concat(variables('resourcePrefix'), '-asp')]",
    "frontendAppName": "[concat(variables('resourcePrefix'), '-frontend')]",
    "backendAppName": "[concat(variables('resourcePrefix'), '-backend')]",
    "sqlServerName": "[concat(variables('resourcePrefix'), '-sqlserver')]",
    "sqlDatabaseName": "[concat(variables('resourcePrefix'), '-hrdb')]",
    "storageAccountName": "[concat(replace(variables('resourcePrefix'), '-', ''), 'docs')]",
    "functionAppName": "[concat(variables('resourcePrefix'), '-notifications')]",
    "functionStorageName": "[concat(replace(variables('resourcePrefix'), '-', ''), 'func')]",
    "logAnalyticsName": "[concat(variables('resourcePrefix'), '-logs')]",
    "appInsightsName": "[concat(variables('resourcePrefix'), '-insights')]",
    "keyVaultName": "[concat(variables('resourcePrefix'), '-kv')]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2021-02-01",
      "name": "[variables('vnetName')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "HR-Talent-Platform"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "[variables('publicSubnetName')]",
            "properties": {
              "addressPrefix": "10.0.1.0/24"
            }
          },
          {
            "name": "[variables('privateSubnetName')]",
            "properties": {
              "addressPrefix": "10.0.2.0/24",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
              }
            }
          },
          {
            "name": "[variables('dataSubnetName')]",
            "properties": {
              "addressPrefix": "10.0.3.0/24"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2021-02-01",
      "name": "[variables('nsgName')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "HR-Talent-Platform"
      },
      "properties": {
        "securityRules": [
          {
            "name": "AllowHTTPS",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowSSHFromInternet",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2021-02-01",
      "name": "[concat(variables('appGatewayName'), '-pip')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "HR-Talent-Platform"
      },
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/applicationGateways",
      "apiVersion": "2021-02-01",
      "name": "[variables('appGatewayName')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "HR-Talent-Platform"
      },
      "properties": {
        "sku": {
          "name": "Standard_v2",
          "tier": "Standard_v2",
          "capacity": 2
        },
        "gatewayIPConfigurations": [
          {
            "name": "appGatewayIpConfig",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('publicSubnetName'))]"
              }
            }
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "appGwPublicFrontendIp",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('appGatewayName'), '-pip'))]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "port_80",
            "properties": {
              "port": 80
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "frontendPool",
            "properties": {
              "backendAddresses": []
            }
          },
          {
            "name": "backendPool",
            "properties": {
              "backendAddresses": []
            }
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "appGatewayBackendHttpSettings",
            "properties": {
              "port": 80,
              "protocol": "Http",
              "cookieBasedAffinity": "Disabled"
            }
          }
        ],
        "httpListeners": [
          {
            "name": "appGatewayHttpListener",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', variables('appGatewayName'), 'appGwPublicFrontendIp')]"
              },
              "frontendPort": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', variables('appGatewayName'), 'port_80')]"
              },
              "protocol": "Http"
            }
          }
        ],
        "requestRoutingRules": [
          {
            "name": "rule1",
            "properties": {
              "ruleType": "Basic",
              "httpListener": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', variables('appGatewayName'), 'appGatewayHttpListener')]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', variables('appGatewayName'), 'frontendPool')]"
              },
              "backendHttpSettings": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', variables('appGatewayName'), 'appGatewayBackendHttpSettings')]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('appGatewayName'), '-pip'))]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-02-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "HR-Talent-Platform"
      },
      "sku": {
        "name": "[parameters('appServicePlanSku')]"
      },
      "properties": {
        "reserved": false
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[variables('frontendAppName')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "HR-Talent-Platform",
        "Component": "Frontend"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "appSettings": [
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "14.15.0"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName'))).InstrumentationKey]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[variables('backendAppName')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "HR-Talent-Platform",
        "Component": "Backend"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName'))).InstrumentationKey]"
            },
            {
              "name": "DATABASE_CONNECTION_STRING",
              "value": "[concat('Server=tcp:', reference(resourceId('Microsoft.Sql/servers', variables('sqlServerName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('sqlDatabaseName'), ';Persist Security Info=False;User ID=', parameters('sqlAdminUsername'), ';Password=', parameters('sqlAdminPassword'), ';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]",
        "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]"
      ]
    },
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2021-02-01-preview",
      "name": "[variables('sqlServerName')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "HR-Talent-Platform"
      },
      "properties": {
        "administratorLogin": "[parameters('sqlAdminUsername')]",
        "administratorLoginPassword": "[parameters('sqlAdminPassword')]",
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2021-02-01-preview",
      "name": "[concat(variables('sqlServerName'), '/', variables('sqlDatabaseName'))]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "HR-Talent-Platform"
      },
      "sku": {
        "name": "S1",
        "tier": "Standard"
      },
      "properties": {
        "collation": "SQL_Latin1_General_CP1_CI_AS"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "HR-Talent-Platform",
        "Purpose": "DocumentStorage"
      },
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": false,
        "minimumTlsVersion": "TLS1_0",
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-04-01",
      "name": "[concat(variables('storageAccountName'), '/default/hr-documents')]",
      "properties": {
        "publicAccess": "Container"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "name": "[variables('functionStorageName')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "HR-Talent-Platform",
        "Purpose": "FunctionStorage"
      },
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[variables('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "HR-Talent-Platform",
        "Component": "NotificationService"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('functionStorageName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('functionStorageName')), '2021-04-01').keys[0].value)]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~3"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName'))).InstrumentationKey]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('functionStorageName'))]",
        "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]"
      ]
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2021-06-01",
      "name": "[variables('logAnalyticsName')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "HR-Talent-Platform"
      },
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 7
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('appInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "HR-Talent-Platform"
      },
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2021-06-01-preview",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "HR-Talent-Platform"
      },
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [],
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": true,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 7
      }
    },
    {
      "type": "Microsoft.Authorization/roleDefinitions",
      "apiVersion": "2018-01-01-preview",
      "name": "[guid(subscription().subscriptionId, 'HR-Custom-Role')]",
      "properties": {
        "roleName": "HR Platform Custom Role",
        "description": "Custom role for HR platform with broad permissions",
        "type": "CustomRole",
        "permissions": [
          {
            "actions": [
              "*"
            ],
            "notActions": []
          }
        ],
        "assignableScopes": [
          "/"
        ]
      }
    },
    {
      "type": "Microsoft.Sql/servers/firewallRules",
      "apiVersion": "2021-02-01-preview",
      "name": "[concat(variables('sqlServerName'), '/AllowAllWindowsAzureIps')]",
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "0.0.0.0"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2021-02-01",
      "name": "[concat(variables('storageAccountName'), '-pe')]",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "HR-Talent-Platform"
      },
      "properties": {
        "subnet": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('dataSubnetName'))]"
        },
        "privateLinkServiceConnections": [
          {
            "name": "[concat(variables('storageAccountName'), '-pls')]",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
              "groupIds": [
                "blob"
              ]
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2020-06-01",
      "name": "privatelink.blob.core.windows.net",
      "location": "global",
      "tags": {
        "Environment": "[parameters('environmentName')]",
        "Project": "HR-Talent-Platform"
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2020-06-01",
      "name": "[concat('privatelink.blob.core.windows.net', '/', variables('vnetName'), '-link')]",
      "location": "global",
      "properties": {
        "registrationEnabled": false,
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.blob.core.windows.net')]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
      ]
    }
  ]
}