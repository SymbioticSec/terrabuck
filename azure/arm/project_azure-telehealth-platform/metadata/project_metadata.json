{
  "project_info": {
    "project_id": "azure-telehealth-platform",
    "project_name": "Telehealth Video Consultation Platform",
    "description": "A HIPAA-compliant telehealth platform enabling secure video consultations between healthcare providers and patients. The system handles patient registration, appointment scheduling, secure video sessions, and medical record storage with end-to-end encryption and audit logging.",
    "cloud_provider": "azure",
    "language": "arm_template",
    "architecture_type": "microservices",
    "business_context": "Healthcare organization expanding to remote patient care, requiring secure video consultations, patient data management, and integration with existing EMR systems. Must comply with HIPAA regulations and handle 500+ concurrent video sessions.",
    "components": [
      {
        "name": "web_application_gateway",
        "service_type": "azure_application_gateway",
        "purpose": "SSL termination, WAF protection, and load balancing for web traffic with DDoS protection",
        "dependencies": [],
        "security_considerations": [
          "SSL/TLS encryption",
          "Web Application Firewall",
          "DDoS protection",
          "IP whitelisting"
        ],
        "configuration_complexity": "medium"
      },
      {
        "name": "patient_portal_webapp",
        "service_type": "azure_app_service",
        "purpose": "React-based patient portal for appointment booking, medical history access, and video consultation interface",
        "dependencies": [
          "web_application_gateway",
          "patient_database"
        ],
        "security_considerations": [
          "Authentication integration",
          "HTTPS enforcement",
          "Session management",
          "Input validation"
        ],
        "configuration_complexity": "medium"
      },
      {
        "name": "video_consultation_service",
        "service_type": "azure_communication_services",
        "purpose": "Handles real-time video/audio streaming, chat, and screen sharing for medical consultations",
        "dependencies": [
          "consultation_api",
          "audit_storage"
        ],
        "security_considerations": [
          "End-to-end encryption",
          "Session recording encryption",
          "Access token management",
          "HIPAA compliance"
        ],
        "configuration_complexity": "high"
      },
      {
        "name": "consultation_api",
        "service_type": "azure_container_instances",
        "purpose": "Microservices API handling appointment management, patient records, and consultation orchestration",
        "dependencies": [
          "patient_database",
          "audit_storage"
        ],
        "security_considerations": [
          "API authentication",
          "Data encryption in transit",
          "Role-based access control",
          "Audit logging"
        ],
        "configuration_complexity": "high"
      },
      {
        "name": "patient_database",
        "service_type": "azure_sql_database",
        "purpose": "Stores encrypted patient records, appointment data, and medical history with backup and disaster recovery",
        "dependencies": [],
        "security_considerations": [
          "Transparent Data Encryption",
          "Always Encrypted columns",
          "Database firewall",
          "Backup encryption",
          "Access auditing"
        ],
        "configuration_complexity": "high"
      },
      {
        "name": "audit_storage",
        "service_type": "azure_storage_account",
        "purpose": "Immutable storage for HIPAA audit logs, consultation recordings, and compliance documentation",
        "dependencies": [],
        "security_considerations": [
          "Immutable blob storage",
          "Access logging",
          "Encryption at rest",
          "Retention policies",
          "Secure access keys"
        ],
        "configuration_complexity": "medium"
      }
    ],
    "network_topology": {
      "vpc_structure": "Single VNet with three subnets: public subnet for Application Gateway, private subnet for App Services and Container Instances, and isolated subnet for SQL Database with private endpoints",
      "security_zones": [
        "public",
        "private",
        "data"
      ],
      "connectivity_patterns": [
        "Internet -> Application Gateway -> App Service",
        "App Service -> Container Instances via private endpoints",
        "APIs -> SQL Database via private link",
        "All services -> Storage Account via service endpoints"
      ]
    },
    "estimated_resources": {
      "compute_instances": 4,
      "storage_buckets": 3,
      "databases": 2,
      "networking_components": 8,
      "security_components": 6,
      "monitoring_components": 3,
      "total_estimated": 26
    },
    "generation_metadata": {
      "agent": "ArchitectureAgent",
      "timestamp": "2025-08-08T17:28:23.369335"
    },
    "vulnerabilities": [
      {
        "rule_id": "AZURE-DATABASE-NO_PUBLIC_FIREWALL_ACCESS",
        "title": "No Public Firewall Access",
        "description": "The SQL database firewall is configured to allow access from all IP addresses (0.0.0.0-255.255.255.255), exposing sensitive patient data to potential unauthorized access from the internet. This violates HIPAA requirements for data protection.",
        "severity": "high",
        "affected_component": "patient_database",
        "injection_strategy": "Configure SQL firewall rule with overly permissive IP range",
        "business_impact": "Potential unauthorized access to patient medical records, HIPAA compliance violations, data breach with significant financial and legal consequences",
        "trivy_yaml_content": "terraform:\n  links:\n    - https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_firewall_rule#end_ip_address\n  good:\n    - |-\n      resource \"azurerm_sql_firewall_rule\" \"good_example\" {\n        name                = \"good_rule\"\n        resource_group_name = azurerm_resource_group.example.name\n        server_name         = azurerm_sql_server.example.name\n        start_ip_address    = \"0.0.0.0\"\n        end_ip_address      = \"0.0.0.0\"\n      }\n  bad:\n    - |-\n      resource \"azurerm_sql_firewall_rule\" \"bad_example\" {\n        name                = \"bad_rule\"\n        resource_group_name = azurerm_resource_group.example.name\n        server_name         = azurerm_sql_server.example.name\n        start_ip_address    = \"0.0.0.0\"\n        end_ip_address      = \"255.255.255.255\"\n      }",
        "file_name": "no_public_firewall_access.yaml",
        "service": "database",
        "provider": "unknown",
        "injection_example": {
          "vulnerable_pattern": "Set firewall rule with start_ip_address = '0.0.0.0' and end_ip_address = '255.255.255.255'",
          "explanation": "This configuration allows database access from any IP address on the internet, bypassing network security controls"
        },
        "trivy_rule": true,
        "llm_enhanced": true,
        "source": "llm_selected_trivy_rule"
      },
      {
        "rule_id": "AZURE-APPSERVICE-USE_SECURE_TLS_POLICY",
        "title": "Use Secure TLS Policy",
        "description": "The patient portal web application is configured to accept TLS 1.0 connections, which uses outdated encryption that can be compromised. This creates a vulnerability for patient data transmission during video consultations and portal access.",
        "severity": "medium",
        "affected_component": "patient_portal_webapp",
        "injection_strategy": "Set min_tls_version to '1.0' in App Service configuration",
        "business_impact": "Vulnerable to man-in-the-middle attacks during patient login and data transmission, potential exposure of PHI during transit",
        "trivy_yaml_content": "terraform:\n  links:\n    - https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#min_tls_version\n  good:\n    - |-\n      resource \"azurerm_app_service\" \"good_example\" {\n        name                = \"example-app-service\"\n        location            = azurerm_resource_group.example.location\n        resource_group_name = azurerm_resource_group.example.name\n        app_service_plan_id = azurerm_app_service_plan.example.id\n\n        site_config {\n          min_tls_version = \"1.2\"\n        }\n      }\n  bad:\n    - |-\n      resource \"azurerm_app_service\" \"bad_example\" {\n        name                = \"example-app-service\"\n        location            = azurerm_resource_group.example.location\n        resource_group_name = azurerm_resource_group.example.name\n        app_service_plan_id = azurerm_app_service_plan.example.id\n\n        site_config {\n          min_tls_version = \"1.0\"\n        }\n      }",
        "file_name": "use_secure_tls_policy.yaml",
        "service": "appservice",
        "provider": "unknown",
        "injection_example": {
          "vulnerable_pattern": "Configure site_config block with min_tls_version = '1.0'",
          "explanation": "TLS 1.0 has known cryptographic weaknesses and is deprecated, making encrypted communications vulnerable to attacks"
        },
        "trivy_rule": true,
        "llm_enhanced": true,
        "source": "llm_selected_trivy_rule"
      },
      {
        "rule_id": "AZURE-STORAGE-ENFORCE_HTTPS",
        "title": "Enforce HTTPS",
        "description": "The audit storage account allows HTTP connections alongside HTTPS, creating a risk that sensitive audit logs and consultation recordings could be transmitted unencrypted, violating HIPAA encryption requirements.",
        "severity": "medium",
        "affected_component": "audit_storage",
        "injection_strategy": "Set enable_https_traffic_only to false in storage account configuration",
        "business_impact": "Audit logs and patient consultation recordings could be intercepted in transit, compromising patient privacy and audit integrity",
        "trivy_yaml_content": "terraform:\n  links:\n    - https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#enable_https_traffic_only\n  good:\n    - |-\n      resource \"azurerm_storage_account\" \"good_example\" {\n        name                      = \"storageaccountname\"\n        resource_group_name       = azurerm_resource_group.example.name\n        location                  = azurerm_resource_group.example.location\n        account_tier              = \"Standard\"\n        account_replication_type  = \"GRS\"\n        enable_https_traffic_only = true\n      }\n  bad:\n    - |-\n      resource \"azurerm_storage_account\" \"bad_example\" {\n        name                      = \"storageaccountname\"\n        resource_group_name       = azurerm_resource_group.example.name\n        location                  = azurerm_resource_group.example.location\n        account_tier              = \"Standard\"\n        account_replication_type  = \"GRS\"\n        enable_https_traffic_only = false\n      }",
        "file_name": "enforce_https.yaml",
        "service": "storage",
        "provider": "unknown",
        "injection_example": {
          "vulnerable_pattern": "Set enable_https_traffic_only = false in storage account resource",
          "explanation": "Allows unencrypted HTTP connections to storage containing sensitive audit data and consultation recordings"
        },
        "trivy_rule": true,
        "llm_enhanced": true,
        "source": "llm_selected_trivy_rule"
      },
      {
        "rule_id": "AZURE-APPSERVICE-AUTHENTICATION_ENABLED",
        "title": "Authentication Enabled",
        "description": "The patient portal web application lacks proper authentication configuration, potentially allowing unauthorized access to patient data and consultation scheduling functionality without proper identity verification.",
        "severity": "high",
        "affected_component": "patient_portal_webapp",
        "injection_strategy": "Omit auth_settings block or set enabled to false in App Service configuration",
        "business_impact": "Unauthorized access to patient portal, potential data breaches, appointment manipulation, and HIPAA compliance violations",
        "trivy_yaml_content": "terraform:\n  links:\n    - https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#enabled\n  good:\n    - |-\n      resource \"azurerm_app_service\" \"good_example\" {\n        name                = \"example-app-service\"\n        location            = azurerm_resource_group.example.location\n        resource_group_name = azurerm_resource_group.example.name\n        app_service_plan_id = azurerm_app_service_plan.example.id\n\n        auth_settings {\n          enabled = true\n        }\n      }\n  bad:\n    - |-\n      resource \"azurerm_app_service\" \"bad_example\" {\n        name                = \"example-app-service\"\n        location            = azurerm_resource_group.example.location\n        resource_group_name = azurerm_resource_group.example.name\n        app_service_plan_id = azurerm_app_service_plan.example.id\n      }",
        "file_name": "authentication_enabled.yaml",
        "service": "appservice",
        "provider": "unknown",
        "injection_example": {
          "vulnerable_pattern": "Deploy App Service without auth_settings block or with enabled = false",
          "explanation": "Missing authentication allows direct access to the application without identity verification"
        },
        "trivy_rule": true,
        "llm_enhanced": true,
        "source": "llm_selected_trivy_rule"
      },
      {
        "rule_id": "AZURE-NETWORK-NO_PUBLIC_INGRESS",
        "title": "No Public Ingress",
        "description": "Network security rules allow inbound traffic from all internet sources (0.0.0.0/0) to internal services, bypassing the Application Gateway and potentially exposing backend services directly to internet threats.",
        "severity": "high",
        "affected_component": "consultation_api",
        "injection_strategy": "Configure network security rule with source_address_prefix = '0.0.0.0/0' and access = 'Allow'",
        "business_impact": "Direct exposure of API services to internet attacks, potential bypass of WAF protection, unauthorized access to patient data APIs",
        "trivy_yaml_content": "terraform:\n  links:\n    - https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_security_rule\n  good:\n    - |-\n      resource \"azurerm_network_security_rule\" \"good_example\" {\n        direction                  = \"Inbound\"\n        destination_address_prefix = \"10.0.0.0/16\"\n        access                     = \"Allow\"\n      }\n  bad:\n    - |-\n      resource \"azurerm_network_security_rule\" \"bad_example\" {\n        direction             = \"Inbound\"\n        source_address_prefix = \"0.0.0.0/0\"\n        access                = \"Allow\"\n      }",
        "file_name": "no_public_ingress.yaml",
        "service": "network",
        "provider": "unknown",
        "injection_example": {
          "vulnerable_pattern": "Create NSG rule with direction = 'Inbound', source_address_prefix = '0.0.0.0/0', access = 'Allow'",
          "explanation": "Allows unrestricted inbound access from any internet source, bypassing intended network security architecture"
        },
        "trivy_rule": true,
        "llm_enhanced": true,
        "source": "llm_selected_trivy_rule"
      },
      {
        "rule_id": "AZURE-DATABASE-ALL_THREAT_ALERTS_ENABLED",
        "title": "All Threat Alerts Enabled",
        "description": "SQL Server security alert policy has disabled critical threat detection alerts including SQL injection and data exfiltration monitoring, reducing the ability to detect attacks against patient data in real-time.",
        "severity": "medium",
        "affected_component": "patient_database",
        "injection_strategy": "Configure disabled_alerts to include critical alert types like 'Sql_Injection' and 'Data_Exfiltration'",
        "business_impact": "Delayed detection of database attacks, potential unnoticed data breaches, reduced incident response capabilities for patient data protection",
        "trivy_yaml_content": "terraform:\n  links:\n    - https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_security_alert_policy#disabled_alerts\n  good:\n    - |-\n      resource \"azurerm_mssql_server_security_alert_policy\" \"good_example\" {\n        resource_group_name        = azurerm_resource_group.example.name\n        server_name                = azurerm_sql_server.example.name\n        state                      = \"Enabled\"\n        storage_endpoint           = azurerm_storage_account.example.primary_blob_endpoint\n        storage_account_access_key = azurerm_storage_account.example.primary_access_key\n        disabled_alerts            = []\n        retention_days             = 20\n      }\n  bad:\n    - |-\n      resource \"azurerm_mssql_server_security_alert_policy\" \"bad_example\" {\n        resource_group_name        = azurerm_resource_group.example.name\n        server_name                = azurerm_sql_server.example.name\n        state                      = \"Enabled\"\n        storage_endpoint           = azurerm_storage_account.example.primary_blob_endpoint\n        storage_account_access_key = azurerm_storage_account.example.primary_access_key\n        disabled_alerts = [\n          \"Sql_Injection\",\n          \"Data_Exfiltration\"\n        ]\n        retention_days = 20\n      }",
        "file_name": "all_threat_alerts_enabled.yaml",
        "service": "database",
        "provider": "unknown",
        "injection_example": {
          "vulnerable_pattern": "Set disabled_alerts = ['Sql_Injection', 'Data_Exfiltration'] in security alert policy",
          "explanation": "Disabling critical threat alerts prevents detection of common database attack vectors"
        },
        "trivy_rule": true,
        "llm_enhanced": true,
        "source": "llm_selected_trivy_rule"
      },
      {
        "rule_id": "AZURE-STORAGE-ALLOW_MICROSOFT_SERVICE_BYPASS",
        "title": "Allow Microsoft Service Bypass",
        "description": "Storage account network rules do not include 'AzureServices' in the bypass configuration, potentially blocking legitimate Azure services from accessing audit logs and consultation recordings needed for platform functionality.",
        "severity": "medium",
        "affected_component": "audit_storage",
        "injection_strategy": "Configure network_rules bypass without 'AzureServices' option",
        "business_impact": "Potential service disruption, blocked access to audit logs by monitoring services, reduced operational visibility",
        "trivy_yaml_content": "terraform:\n  links:\n    - https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#bypass\n    - https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#bypass\n  good:\n    - |-\n      resource \"azurerm_storage_account\" \"good_example\" {\n        name                = \"storageaccountname\"\n        resource_group_name = azurerm_resource_group.example.name\n\n        location                 = azurerm_resource_group.example.location\n        account_tier             = \"Standard\"\n        account_replication_type = \"LRS\"\n\n        network_rules {\n          default_action = \"Deny\"\n          ip_rules       = [\"100.0.0.1\"]\n          bypass         = [\"Metrics\", \"AzureServices\"]\n        }\n      }\n  bad:\n    - |-\n      resource \"azurerm_storage_account\" \"bad_example\" {\n        name                = \"storageaccountname\"\n        resource_group_name = azurerm_resource_group.example.name\n\n        location                 = azurerm_resource_group.example.location\n        account_tier             = \"Standard\"\n        account_replication_type = \"LRS\"\n\n        network_rules {\n          default_action = \"Deny\"\n          ip_rules       = [\"100.0.0.1\"]\n          bypass         = [\"Metrics\"]\n        }\n      }",
        "file_name": "allow_microsoft_service_bypass.yaml",
        "service": "storage",
        "provider": "unknown",
        "injection_example": {
          "vulnerable_pattern": "Set bypass = ['Metrics'] without including 'AzureServices' in network_rules",
          "explanation": "Prevents trusted Azure services from accessing storage, potentially breaking service integrations"
        },
        "trivy_rule": true,
        "llm_enhanced": true,
        "source": "llm_selected_trivy_rule"
      }
    ],
    "vulnerability_metadata": {
      "total_count": 7,
      "trivy_rules_used": [
        "AZURE-DATABASE-NO_PUBLIC_FIREWALL_ACCESS",
        "AZURE-APPSERVICE-USE_SECURE_TLS_POLICY",
        "AZURE-STORAGE-ENFORCE_HTTPS",
        "AZURE-APPSERVICE-AUTHENTICATION_ENABLED",
        "AZURE-NETWORK-NO_PUBLIC_INGRESS",
        "AZURE-DATABASE-ALL_THREAT_ALERTS_ENABLED",
        "AZURE-STORAGE-ALLOW_MICROSOFT_SERVICE_BYPASS"
      ],
      "severity_distribution": {
        "critical": 0,
        "high": 3,
        "medium": 4,
        "low": 0
      },
      "service_categories": [
        "storage",
        "network",
        "appservice",
        "database"
      ],
      "services_covered": [
        "storage",
        "network",
        "appservice",
        "database"
      ],
      "trivy_integration": true,
      "llm_selected": true
    }
  },
  "generation_info": {
    "extraction_method": "block_marker_parsing",
    "source": "llm_response"
  },
  "file_structure": [],
  "trivy_integration": {},
  "validation_summary": {
    "component_coverage": 1.0,
    "resource_count": 17,
    "components_implemented": 6,
    "components_missing": 0,
    "recommendations": []
  }
}