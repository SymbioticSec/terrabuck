{
  "project_labels": {
    "project_id": "restaurant_pos_inventory_system",
    "overall_security_posture": "vulnerable",
    "vulnerability_count": {
      "total": 7,
      "by_severity": {
        "critical": 0,
        "high": 0,
        "medium": 7
      },
      "by_type": {
        "encryption": 2,
        "monitoring": 2,
        "network": 1,
        "access_control": 1,
        "documentation": 1
      },
      "by_trivy_service": {
        "rds": 1,
        "lambda": 1,
        "elb": 1,
        "ec2": 2,
        "cloudtrail": 1,
        "iam": 1
      }
    },
    "complexity_score": 8,
    "realism_score": 9,
    "educational_value": 9,
    "trivy_coverage": {
      "rules_represented": [
        "AWS-RDS-PERFORMANCE_INSIGHTS_ENCRYPTION_CUSTOMER_KEY",
        "AWS-LAMBDA-ENABLE_TRACING",
        "AWS-ELB-ALB_NOT_PUBLIC",
        "AWS-EC2-AS_ENABLE_AT_REST_ENCRYPTION",
        "AWS-CLOUDTRAIL-ENSURE_CLOUDWATCH_INTEGRATION",
        "AWS-IAM-REQUIRE_SYMBOLS_IN_PASSWORDS",
        "AWS-EC2-ADD_DESCRIPTION_TO_SECURITY_GROUP"
      ],
      "services_covered": [
        "rds",
        "lambda",
        "elb",
        "ec2",
        "cloudtrail",
        "iam"
      ],
      "detection_accuracy": "100%"
    }
  },
  "vulnerability_labels": [
    {
      "rule_id": "AWS-RDS-PERFORMANCE_INSIGHTS_ENCRYPTION_CUSTOMER_KEY",
      "trivy_rule_info": {
        "original_file": "performance_insights_encryption_customer_key.yaml",
        "service_category": "rds",
        "source_url": "https://github.com/aquasecurity/trivy-checks/tree/main/checks/cloud/aws/rds"
      },
      "vulnerability_class": "encryption_key_management",
      "detection_difficulty": "easy",
      "remediation_effort": "low",
      "business_impact_score": 6,
      "compliance_relevance": [
        "PCI-DSS",
        "SOC2",
        "GDPR"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "access_to_aws_console",
        "rds_read_permissions"
      ],
      "mitigation_strategies": [
        "specify_customer_managed_kms_key",
        "configure_performance_insights_kms_key_id",
        "implement_key_rotation_policy"
      ],
      "code_patterns": {
        "vulnerable_pattern": "performance_insights_enabled = true without performance_insights_kms_key_id",
        "secure_pattern": "performance_insights_kms_key_id = \"arn:aws:kms:region:account:key/key-id\""
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "encryption_key_management",
        "severity_numeric": 6.0,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AWS-LAMBDA-ENABLE_TRACING",
      "trivy_rule_info": {
        "original_file": "enable_tracing.yaml",
        "service_category": "lambda",
        "source_url": "https://github.com/aquasecurity/trivy-checks/tree/main/checks/cloud/aws/lambda"
      },
      "vulnerability_class": "observability_monitoring",
      "detection_difficulty": "easy",
      "remediation_effort": "low",
      "business_impact_score": 7,
      "compliance_relevance": [
        "SOC2",
        "PCI-DSS"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "lambda_function_access",
        "security_incident_occurrence"
      ],
      "mitigation_strategies": [
        "enable_xray_tracing_active_mode",
        "configure_tracing_config_block",
        "implement_distributed_tracing"
      ],
      "code_patterns": {
        "vulnerable_pattern": "missing tracing_config block or mode = \"Passthrough\"",
        "secure_pattern": "tracing_config { mode = \"Active\" }"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "observability_monitoring",
        "severity_numeric": 6.5,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AWS-ELB-ALB_NOT_PUBLIC",
      "trivy_rule_info": {
        "original_file": "alb_not_public.yaml",
        "service_category": "elb",
        "source_url": "https://github.com/aquasecurity/trivy-checks/tree/main/checks/cloud/aws/elb"
      },
      "vulnerability_class": "network_exposure",
      "detection_difficulty": "easy",
      "remediation_effort": "medium",
      "business_impact_score": 8,
      "compliance_relevance": [
        "PCI-DSS",
        "SOC2"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "internet_connectivity",
        "network_scanning_tools"
      ],
      "mitigation_strategies": [
        "set_internal_parameter_to_true",
        "implement_private_load_balancer",
        "configure_vpc_endpoints"
      ],
      "code_patterns": {
        "vulnerable_pattern": "internal = false or omitted internal parameter",
        "secure_pattern": "internal = true for non-gateway load balancers"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "network_exposure",
        "severity_numeric": 7.0,
        "should_flag": true,
        "auto_remediable": false,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AWS-EC2-AS_ENABLE_AT_REST_ENCRYPTION",
      "trivy_rule_info": {
        "original_file": "as_enable_at_rest_encryption.yaml",
        "service_category": "ec2",
        "source_url": "https://github.com/aquasecurity/trivy-checks/tree/main/checks/cloud/aws/ec2"
      },
      "vulnerability_class": "data_encryption_at_rest",
      "detection_difficulty": "easy",
      "remediation_effort": "low",
      "business_impact_score": 9,
      "compliance_relevance": [
        "PCI-DSS",
        "GDPR",
        "SOC2"
      ],
      "attack_vector": "physical",
      "prerequisites": [
        "physical_access_to_storage",
        "storage_device_compromise"
      ],
      "mitigation_strategies": [
        "enable_ebs_encryption",
        "configure_encrypted_root_block_device",
        "implement_kms_key_management"
      ],
      "code_patterns": {
        "vulnerable_pattern": "encrypted = false in root_block_device",
        "secure_pattern": "encrypted = true in root_block_device"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "data_encryption_at_rest",
        "severity_numeric": 8.0,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AWS-CLOUDTRAIL-ENSURE_CLOUDWATCH_INTEGRATION",
      "trivy_rule_info": {
        "original_file": "ensure_cloudwatch_integration.yaml",
        "service_category": "cloudtrail",
        "source_url": "https://github.com/aquasecurity/trivy-checks/tree/main/checks/cloud/aws/cloudtrail"
      },
      "vulnerability_class": "audit_logging_monitoring",
      "detection_difficulty": "easy",
      "remediation_effort": "medium",
      "business_impact_score": 8,
      "compliance_relevance": [
        "PCI-DSS",
        "SOC2",
        "GDPR"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "aws_api_access",
        "malicious_activity_execution"
      ],
      "mitigation_strategies": [
        "configure_cloudwatch_logs_integration",
        "set_cloud_watch_logs_group_arn",
        "implement_real_time_monitoring"
      ],
      "code_patterns": {
        "vulnerable_pattern": "missing cloud_watch_logs_group_arn parameter",
        "secure_pattern": "cloud_watch_logs_group_arn = \"${aws_cloudwatch_log_group.example.arn}:*\""
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "audit_logging_monitoring",
        "severity_numeric": 7.5,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AWS-IAM-REQUIRE_SYMBOLS_IN_PASSWORDS",
      "trivy_rule_info": {
        "original_file": "require_symbols_in_passwords.yaml",
        "service_category": "iam",
        "source_url": "https://github.com/aquasecurity/trivy-checks/tree/main/checks/cloud/aws/iam"
      },
      "vulnerability_class": "authentication_policy",
      "detection_difficulty": "easy",
      "remediation_effort": "low",
      "business_impact_score": 7,
      "compliance_relevance": [
        "PCI-DSS",
        "SOC2"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "password_attack_tools",
        "user_credential_targeting"
      ],
      "mitigation_strategies": [
        "enable_require_symbols_parameter",
        "implement_strong_password_policy",
        "enforce_multi_factor_authentication"
      ],
      "code_patterns": {
        "vulnerable_pattern": "missing require_symbols = true parameter",
        "secure_pattern": "require_symbols = true in password policy"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "authentication_policy",
        "severity_numeric": 6.5,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AWS-EC2-ADD_DESCRIPTION_TO_SECURITY_GROUP",
      "trivy_rule_info": {
        "original_file": "add_description_to_security_group.yaml",
        "service_category": "ec2",
        "source_url": "https://github.com/aquasecurity/trivy-checks/tree/main/checks/cloud/aws/ec2"
      },
      "vulnerability_class": "configuration_documentation",
      "detection_difficulty": "easy",
      "remediation_effort": "low",
      "business_impact_score": 5,
      "compliance_relevance": [
        "SOC2"
      ],
      "attack_vector": "local",
      "prerequisites": [
        "infrastructure_management_access",
        "configuration_review"
      ],
      "mitigation_strategies": [
        "add_meaningful_descriptions",
        "implement_security_group_documentation",
        "establish_naming_conventions"
      ],
      "code_patterns": {
        "vulnerable_pattern": "description = \"\" or missing description",
        "secure_pattern": "description = \"meaningful security group purpose\""
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "configuration_documentation",
        "severity_numeric": 4.0,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    }
  ],
  "ml_metadata": {
    "suitable_for_tasks": [
      "vulnerability_detection",
      "severity_classification",
      "auto_remediation",
      "trivy_rule_matching",
      "compliance_gap_analysis",
      "security_posture_assessment"
    ],
    "data_splits": {
      "recommended_train": 0.7,
      "recommended_val": 0.15,
      "recommended_test": 0.15
    },
    "sampling_weight": 8,
    "annotation_confidence": "high",
    "requires_domain_knowledge": true,
    "trivy_integration": {
      "can_validate_with_trivy": true,
      "trivy_scan_command": "trivy config --format json --severity MEDIUM,HIGH,CRITICAL .",
      "expected_trivy_output": "7 medium severity findings across RDS, Lambda, ELB, EC2, CloudTrail, and IAM services"
    }
  },
  "educational_metadata": {
    "learning_objectives": [
      "understand_trivy_security_scanning_capabilities",
      "identify_common_aws_misconfigurations",
      "learn_encryption_key_management_best_practices",
      "implement_proper_monitoring_and_observability",
      "configure_secure_network_architectures",
      "establish_strong_authentication_policies"
    ],
    "prerequisite_knowledge": [
      "basic_aws_services_understanding",
      "terraform_infrastructure_as_code",
      "security_compliance_frameworks",
      "restaurant_pos_system_architecture"
    ],
    "difficulty_level": "intermediate",
    "estimated_review_time": 45,
    "key_takeaways": [
      "trivy_detects_real_world_security_misconfigurations",
      "medium_severity_issues_can_compound_to_major_risks",
      "pci_dss_compliance_requires_multiple_security_controls",
      "automation_tools_like_trivy_essential_for_scale",
      "proper_documentation_improves_security_maintenance"
    ],
    "trivy_learning_value": {
      "demonstrates_trivy_capabilities": true,
      "real_world_applicability": "high",
      "rule_complexity": "moderate"
    }
  },
  "computed_metrics": {
    "total_vulnerabilities": 7,
    "unique_rule_ids": 7,
    "has_critical_vulnerabilities": false,
    "cloud_provider": "aws",
    "language": "terraform",
    "component_count": 6,
    "file_count": 4,
    "service_categories": [
      "lambda",
      "cloudtrail",
      "ec2",
      "iam",
      "rds",
      "elb"
    ]
  },
  "dataset_metadata": {
    "project_id": "restaurant_pos_inventory_system",
    "generation_timestamp": "2025-08-06T23:24:01.708938",
    "version": "1.0",
    "data_quality": "high"
  }
}