{
  "project_labels": {
    "project_id": "enterprise_api_gateway_platform",
    "overall_security_posture": "vulnerable",
    "vulnerability_count": {
      "total": 7,
      "by_severity": {
        "critical": 0,
        "high": 0,
        "medium": 7,
        "low": 0
      },
      "by_type": {
        "access_control": 2,
        "encryption": 2,
        "monitoring": 2,
        "network": 1
      },
      "by_trivy_service": {
        "storage": 2,
        "compute": 2,
        "network": 2,
        "identity": 1
      }
    },
    "complexity_score": 8,
    "realism_score": 9,
    "educational_value": 9,
    "trivy_coverage": {
      "rules_represented": [
        "AWS-CLOUDFRONT-ENFORCE_HTTPS",
        "AWS-S3-SPECIFY_PUBLIC_ACCESS_BLOCK",
        "AWS-DYNAMODB-ENABLE_AT_REST_ENCRYPTION",
        "AWS-RDS-ENABLE_PERFORMANCE_INSIGHTS",
        "AWS-ECR-ENABLE_IMAGE_SCANS",
        "AWS-IAM-SET_MAX_PASSWORD_AGE",
        "AWS-ELB-DROP_INVALID_HEADERS"
      ],
      "services_covered": [
        "cloudfront",
        "s3",
        "dynamodb",
        "rds",
        "ecr",
        "iam",
        "elb"
      ],
      "detection_accuracy": "95%"
    }
  },
  "vulnerability_labels": [
    {
      "rule_id": "AWS-CLOUDFRONT-ENFORCE_HTTPS",
      "trivy_rule_info": {
        "original_file": "enforce_https.yaml",
        "service_category": "cloudfront",
        "source_url": "https://github.com/aquasecurity/trivy-checks/tree/main/checks/cloud/aws/cloudfront"
      },
      "vulnerability_class": "network_security",
      "detection_difficulty": "easy",
      "remediation_effort": "low",
      "business_impact_score": 7,
      "compliance_relevance": [
        "GDPR",
        "SOC2",
        "PCI-DSS",
        "HIPAA"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "network_access_to_cloudfront_distribution",
        "ability_to_intercept_http_traffic"
      ],
      "mitigation_strategies": [
        "set_viewer_protocol_policy_to_https_only",
        "configure_redirect_to_https",
        "implement_hsts_headers"
      ],
      "code_patterns": {
        "vulnerable_pattern": "ViewerProtocolPolicy: allow-all",
        "secure_pattern": "ViewerProtocolPolicy: https-only"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "transport_security",
        "severity_numeric": 6.5,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AWS-S3-SPECIFY_PUBLIC_ACCESS_BLOCK",
      "trivy_rule_info": {
        "original_file": "specify_public_access_block.yaml",
        "service_category": "s3",
        "source_url": "https://github.com/aquasecurity/trivy-checks/tree/main/checks/cloud/aws/s3"
      },
      "vulnerability_class": "access_control",
      "detection_difficulty": "easy",
      "remediation_effort": "low",
      "business_impact_score": 8,
      "compliance_relevance": [
        "GDPR",
        "SOC2",
        "CCPA"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "knowledge_of_bucket_name",
        "internet_access"
      ],
      "mitigation_strategies": [
        "enable_public_access_block_configuration",
        "set_block_public_acls_to_true",
        "implement_bucket_policies_with_least_privilege"
      ],
      "code_patterns": {
        "vulnerable_pattern": "missing PublicAccessBlockConfiguration",
        "secure_pattern": "PublicAccessBlockConfiguration with all blocks enabled"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "access_control",
        "severity_numeric": 7.0,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AWS-DYNAMODB-ENABLE_AT_REST_ENCRYPTION",
      "trivy_rule_info": {
        "original_file": "enable_at_rest_encryption.yaml",
        "service_category": "dynamodb",
        "source_url": "https://github.com/aquasecurity/trivy-checks/tree/main/checks/cloud/aws/dynamodb"
      },
      "vulnerability_class": "encryption",
      "detection_difficulty": "easy",
      "remediation_effort": "medium",
      "business_impact_score": 8,
      "compliance_relevance": [
        "GDPR",
        "SOC2",
        "PCI-DSS",
        "HIPAA"
      ],
      "attack_vector": "local",
      "prerequisites": [
        "physical_access_to_aws_infrastructure",
        "privileged_access_to_storage_layer"
      ],
      "mitigation_strategies": [
        "enable_sse_specification",
        "use_aws_managed_kms_keys",
        "implement_customer_managed_encryption_keys"
      ],
      "code_patterns": {
        "vulnerable_pattern": "missing SSESpecification or SSEEnabled: false",
        "secure_pattern": "SSESpecification with SSEEnabled: true"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "encryption",
        "severity_numeric": 7.5,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AWS-RDS-ENABLE_PERFORMANCE_INSIGHTS",
      "trivy_rule_info": {
        "original_file": "enable_performance_insights.yaml",
        "service_category": "rds",
        "source_url": "https://github.com/aquasecurity/trivy-checks/tree/main/checks/cloud/aws/rds"
      },
      "vulnerability_class": "monitoring",
      "detection_difficulty": "medium",
      "remediation_effort": "low",
      "business_impact_score": 5,
      "compliance_relevance": [
        "SOC2"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "database_access",
        "ability_to_perform_performance_attacks"
      ],
      "mitigation_strategies": [
        "enable_performance_insights",
        "configure_performance_insights_kms_key",
        "set_appropriate_retention_period"
      ],
      "code_patterns": {
        "vulnerable_pattern": "EnablePerformanceInsights: false or missing",
        "secure_pattern": "EnablePerformanceInsights: true with KMS key"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "monitoring",
        "severity_numeric": 5.5,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AWS-ECR-ENABLE_IMAGE_SCANS",
      "trivy_rule_info": {
        "original_file": "enable_image_scans.yaml",
        "service_category": "ecr",
        "source_url": "https://github.com/aquasecurity/trivy-checks/tree/main/checks/cloud/aws/ecr"
      },
      "vulnerability_class": "supply_chain_security",
      "detection_difficulty": "easy",
      "remediation_effort": "low",
      "business_impact_score": 7,
      "compliance_relevance": [
        "SOC2",
        "NIST"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "vulnerable_container_images",
        "deployment_access"
      ],
      "mitigation_strategies": [
        "enable_scan_on_push",
        "implement_image_vulnerability_scanning",
        "block_deployment_of_vulnerable_images"
      ],
      "code_patterns": {
        "vulnerable_pattern": "ScanOnPush: false",
        "secure_pattern": "ScanOnPush: true"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "supply_chain",
        "severity_numeric": 6.5,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AWS-IAM-SET_MAX_PASSWORD_AGE",
      "trivy_rule_info": {
        "original_file": "set_max_password_age.yaml",
        "service_category": "iam",
        "source_url": "https://github.com/aquasecurity/trivy-checks/tree/main/checks/cloud/aws/iam"
      },
      "vulnerability_class": "identity_management",
      "detection_difficulty": "easy",
      "remediation_effort": "low",
      "business_impact_score": 6,
      "compliance_relevance": [
        "SOC2",
        "PCI-DSS",
        "NIST"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "credential_compromise",
        "time_for_password_cracking"
      ],
      "mitigation_strategies": [
        "set_maximum_password_age",
        "implement_password_rotation_policies",
        "enforce_strong_password_requirements"
      ],
      "code_patterns": {
        "vulnerable_pattern": "missing max_password_age parameter",
        "secure_pattern": "max_password_age = 90"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "access_control",
        "severity_numeric": 6.0,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AWS-ELB-DROP_INVALID_HEADERS",
      "trivy_rule_info": {
        "original_file": "drop_invalid_headers.yaml",
        "service_category": "elb",
        "source_url": "https://github.com/aquasecurity/trivy-checks/tree/main/checks/cloud/aws/elb"
      },
      "vulnerability_class": "network_security",
      "detection_difficulty": "medium",
      "remediation_effort": "low",
      "business_impact_score": 7,
      "compliance_relevance": [
        "SOC2",
        "OWASP"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "ability_to_send_http_requests",
        "knowledge_of_header_injection_techniques"
      ],
      "mitigation_strategies": [
        "enable_drop_invalid_header_fields",
        "implement_request_validation",
        "configure_waf_rules_for_header_filtering"
      ],
      "code_patterns": {
        "vulnerable_pattern": "routing.http.drop_invalid_header_fields.enabled: false",
        "secure_pattern": "routing.http.drop_invalid_header_fields.enabled: true"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "input_validation",
        "severity_numeric": 6.5,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    }
  ],
  "ml_metadata": {
    "suitable_for_tasks": [
      "vulnerability_detection",
      "severity_classification",
      "auto_remediation",
      "trivy_rule_matching",
      "compliance_mapping",
      "security_posture_assessment"
    ],
    "data_splits": {
      "recommended_train": 0.7,
      "recommended_val": 0.15,
      "recommended_test": 0.15
    },
    "sampling_weight": 8,
    "annotation_confidence": "high",
    "requires_domain_knowledge": true,
    "trivy_integration": {
      "can_validate_with_trivy": true,
      "trivy_scan_command": "trivy config --format json --severity MEDIUM,HIGH,CRITICAL .",
      "expected_trivy_output": "7 medium severity findings across CloudFront, S3, DynamoDB, RDS, ECR, IAM, and ELB services"
    }
  },
  "educational_metadata": {
    "learning_objectives": [
      "understand_common_aws_security_misconfigurations",
      "learn_trivy_security_scanning_capabilities",
      "master_infrastructure_as_code_security_best_practices",
      "recognize_enterprise_api_gateway_security_patterns",
      "apply_defense_in_depth_principles"
    ],
    "prerequisite_knowledge": [
      "basic_aws_services_knowledge",
      "infrastructure_as_code_concepts",
      "api_gateway_architecture_understanding",
      "security_fundamentals"
    ],
    "difficulty_level": "intermediate",
    "estimated_review_time": 45,
    "key_takeaways": [
      "transport_layer_security_is_critical_for_api_gateways",
      "storage_services_require_explicit_access_controls",
      "encryption_at_rest_protects_against_physical_attacks",
      "monitoring_enables_security_incident_detection",
      "supply_chain_security_prevents_vulnerable_deployments",
      "identity_management_policies_reduce_credential_risks",
      "network_security_controls_prevent_injection_attacks"
    ],
    "trivy_learning_value": {
      "demonstrates_trivy_capabilities": true,
      "real_world_applicability": "high",
      "rule_complexity": "moderate"
    }
  },
  "computed_metrics": {
    "total_vulnerabilities": 7,
    "unique_rule_ids": 7,
    "has_critical_vulnerabilities": false,
    "cloud_provider": "aws",
    "language": "cloudformation",
    "component_count": 7,
    "file_count": 4,
    "service_categories": [
      "ecr",
      "elb",
      "cloudfront",
      "s3",
      "iam",
      "dynamodb",
      "rds"
    ]
  },
  "dataset_metadata": {
    "project_id": "enterprise_api_gateway_platform",
    "generation_timestamp": "2025-08-08T16:47:18.743996",
    "version": "1.0",
    "data_quality": "medium"
  }
}