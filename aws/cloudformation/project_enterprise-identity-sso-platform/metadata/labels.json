{
  "project_labels": {
    "project_id": "enterprise-identity-sso-platform",
    "overall_security_posture": "vulnerable",
    "vulnerability_count": {
      "total": 7,
      "by_severity": {
        "critical": 0,
        "high": 0,
        "medium": 7,
        "low": 0
      },
      "by_type": {
        "access_control": 2,
        "encryption": 3,
        "monitoring": 1,
        "network": 1
      },
      "by_trivy_service": {
        "elasticache": 1,
        "rds": 1,
        "ecs": 1,
        "elb": 1,
        "cloudwatch": 1,
        "iam": 1,
        "ec2": 1
      }
    },
    "complexity_score": 8,
    "realism_score": 9,
    "educational_value": 9,
    "trivy_coverage": {
      "rules_represented": [
        "AWS-ELASTICACHE-ENABLE_AT_REST_ENCRYPTION",
        "AWS-RDS-DISABLE_PUBLIC_ACCESS",
        "AWS-ECS-ENABLE_CONTAINER_INSIGHT",
        "AWS-ELB-DROP_INVALID_HEADERS",
        "AWS-CLOUDWATCH-LOG_GROUP_CUSTOMER_KEY",
        "AWS-IAM-REQUIRE_SYMBOLS_IN_PASSWORDS",
        "AWS-EC2-ADD_DESCRIPTION_TO_SECURITY_GROUP"
      ],
      "services_covered": [
        "storage",
        "database",
        "compute",
        "networking",
        "logging",
        "identity",
        "security"
      ],
      "detection_accuracy": "95%"
    }
  },
  "vulnerability_labels": [
    {
      "rule_id": "AWS-ELASTICACHE-ENABLE_AT_REST_ENCRYPTION",
      "trivy_rule_info": {
        "original_file": "enable_at_rest_encryption.yaml",
        "service_category": "cache/storage",
        "source_url": "https://github.com/aquasecurity/trivy-checks/tree/main/checks/cloud/aws/elasticache"
      },
      "vulnerability_class": "encryption",
      "detection_difficulty": "easy",
      "remediation_effort": "low",
      "business_impact_score": 7,
      "compliance_relevance": [
        "GDPR",
        "SOC2",
        "HIPAA"
      ],
      "attack_vector": "local",
      "prerequisites": [
        "physical_access_to_storage",
        "storage_compromise"
      ],
      "mitigation_strategies": [
        "enable_at_rest_encryption",
        "use_customer_managed_keys",
        "implement_key_rotation"
      ],
      "code_patterns": {
        "vulnerable_pattern": "AtRestEncryptionEnabled: false or omitted",
        "secure_pattern": "AtRestEncryptionEnabled: true"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "encryption",
        "severity_numeric": 6.5,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AWS-RDS-DISABLE_PUBLIC_ACCESS",
      "trivy_rule_info": {
        "original_file": "disable_public_access.yaml",
        "service_category": "database",
        "source_url": "https://github.com/aquasecurity/trivy-checks/tree/main/checks/cloud/aws/rds"
      },
      "vulnerability_class": "access_control",
      "detection_difficulty": "easy",
      "remediation_effort": "medium",
      "business_impact_score": 9,
      "compliance_relevance": [
        "GDPR",
        "SOC2",
        "PCI-DSS"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "internet_connectivity",
        "database_credentials"
      ],
      "mitigation_strategies": [
        "disable_public_access",
        "use_vpc_endpoints",
        "implement_bastion_hosts",
        "network_acls"
      ],
      "code_patterns": {
        "vulnerable_pattern": "PubliclyAccessible: true",
        "secure_pattern": "PubliclyAccessible: false"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "access_control",
        "severity_numeric": 8.0,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AWS-ECS-ENABLE_CONTAINER_INSIGHT",
      "trivy_rule_info": {
        "original_file": "enable_container_insight.yaml",
        "service_category": "compute/monitoring",
        "source_url": "https://github.com/aquasecurity/trivy-checks/tree/main/checks/cloud/aws/ecs"
      },
      "vulnerability_class": "monitoring",
      "detection_difficulty": "medium",
      "remediation_effort": "low",
      "business_impact_score": 6,
      "compliance_relevance": [
        "SOC2",
        "ISO27001"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "service_compromise",
        "lateral_movement"
      ],
      "mitigation_strategies": [
        "enable_container_insights",
        "implement_centralized_logging",
        "set_up_alerting",
        "monitor_anomalies"
      ],
      "code_patterns": {
        "vulnerable_pattern": "ClusterSettings omitted or containerInsights disabled",
        "secure_pattern": "ClusterSettings with containerInsights enabled"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "monitoring",
        "severity_numeric": 5.5,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AWS-ELB-DROP_INVALID_HEADERS",
      "trivy_rule_info": {
        "original_file": "drop_invalid_headers.yaml",
        "service_category": "networking/load_balancer",
        "source_url": "https://github.com/aquasecurity/trivy-checks/tree/main/checks/cloud/aws/elb"
      },
      "vulnerability_class": "network",
      "detection_difficulty": "medium",
      "remediation_effort": "low",
      "business_impact_score": 7,
      "compliance_relevance": [
        "OWASP",
        "SOC2"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "network_access",
        "http_request_capability"
      ],
      "mitigation_strategies": [
        "enable_drop_invalid_headers",
        "implement_waf",
        "header_validation",
        "request_filtering"
      ],
      "code_patterns": {
        "vulnerable_pattern": "routing.http.drop_invalid_header_fields.enabled: false or omitted",
        "secure_pattern": "routing.http.drop_invalid_header_fields.enabled: true"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "network",
        "severity_numeric": 6.0,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AWS-CLOUDWATCH-LOG_GROUP_CUSTOMER_KEY",
      "trivy_rule_info": {
        "original_file": "log_group_customer_key.yaml",
        "service_category": "logging/encryption",
        "source_url": "https://github.com/aquasecurity/trivy-checks/tree/main/checks/cloud/aws/cloudwatch"
      },
      "vulnerability_class": "encryption",
      "detection_difficulty": "easy",
      "remediation_effort": "medium",
      "business_impact_score": 6,
      "compliance_relevance": [
        "GDPR",
        "SOC2",
        "HIPAA"
      ],
      "attack_vector": "local",
      "prerequisites": [
        "aws_account_compromise",
        "key_access"
      ],
      "mitigation_strategies": [
        "use_customer_managed_keys",
        "implement_key_rotation",
        "restrict_key_access",
        "audit_key_usage"
      ],
      "code_patterns": {
        "vulnerable_pattern": "KmsKeyId omitted or empty string",
        "secure_pattern": "KmsKeyId with customer-managed key ARN"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "encryption",
        "severity_numeric": 5.0,
        "should_flag": true,
        "auto_remediable": false,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AWS-IAM-REQUIRE_SYMBOLS_IN_PASSWORDS",
      "trivy_rule_info": {
        "original_file": "require_symbols_in_passwords.yaml",
        "service_category": "identity/authentication",
        "source_url": "https://github.com/aquasecurity/trivy-checks/tree/main/checks/cloud/aws/iam"
      },
      "vulnerability_class": "access_control",
      "detection_difficulty": "easy",
      "remediation_effort": "low",
      "business_impact_score": 8,
      "compliance_relevance": [
        "SOC2",
        "ISO27001",
        "NIST"
      ],
      "attack_vector": "network",
      "prerequisites": [
        "username_enumeration",
        "password_attack_tools"
      ],
      "mitigation_strategies": [
        "enforce_symbol_requirements",
        "implement_mfa",
        "password_complexity_rules",
        "account_lockout_policies"
      ],
      "code_patterns": {
        "vulnerable_pattern": "require_symbols omitted or false",
        "secure_pattern": "require_symbols: true"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "access_control",
        "severity_numeric": 7.0,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    },
    {
      "rule_id": "AWS-EC2-ADD_DESCRIPTION_TO_SECURITY_GROUP",
      "trivy_rule_info": {
        "original_file": "add_description_to_security_group.yaml",
        "service_category": "networking/security_groups",
        "source_url": "https://github.com/aquasecurity/trivy-checks/tree/main/checks/cloud/aws/ec2"
      },
      "vulnerability_class": "configuration",
      "detection_difficulty": "easy",
      "remediation_effort": "low",
      "business_impact_score": 4,
      "compliance_relevance": [
        "SOC2",
        "ISO27001"
      ],
      "attack_vector": "adjacent",
      "prerequisites": [
        "configuration_access",
        "security_group_modification"
      ],
      "mitigation_strategies": [
        "add_meaningful_descriptions",
        "implement_tagging_standards",
        "regular_security_reviews",
        "automated_compliance_checks"
      ],
      "code_patterns": {
        "vulnerable_pattern": "GroupDescription omitted or empty",
        "secure_pattern": "GroupDescription with meaningful text"
      },
      "training_labels": {
        "is_vulnerable": true,
        "vulnerability_type": "configuration",
        "severity_numeric": 3.0,
        "should_flag": true,
        "auto_remediable": true,
        "trivy_detectable": true
      }
    }
  ],
  "ml_metadata": {
    "suitable_for_tasks": [
      "vulnerability_detection",
      "severity_classification",
      "auto_remediation",
      "trivy_rule_matching",
      "compliance_checking",
      "security_posture_assessment"
    ],
    "data_splits": {
      "recommended_train": 0.7,
      "recommended_val": 0.15,
      "recommended_test": 0.15
    },
    "sampling_weight": 8,
    "annotation_confidence": "high",
    "requires_domain_knowledge": true,
    "trivy_integration": {
      "can_validate_with_trivy": true,
      "trivy_scan_command": "trivy config --format json --severity MEDIUM,HIGH,CRITICAL .",
      "expected_trivy_output": "7 medium severity findings across AWS services"
    }
  },
  "educational_metadata": {
    "learning_objectives": [
      "understand_aws_security_best_practices",
      "learn_trivy_security_scanning_capabilities",
      "recognize_common_infrastructure_misconfigurations",
      "practice_security_remediation_techniques",
      "understand_compliance_requirements_mapping"
    ],
    "prerequisite_knowledge": [
      "basic_aws_services_knowledge",
      "infrastructure_as_code_concepts",
      "security_fundamentals",
      "yaml_cloudformation_syntax"
    ],
    "difficulty_level": "intermediate",
    "estimated_review_time": 45,
    "key_takeaways": [
      "encryption_at_rest_is_critical_for_sensitive_data",
      "public_database_access_creates_major_security_risks",
      "monitoring_and_logging_are_essential_for_security",
      "network_security_requires_multiple_layers_of_protection",
      "password_policies_must_enforce_complexity_requirements",
      "proper_documentation_prevents_security_misconfigurations"
    ],
    "trivy_learning_value": {
      "demonstrates_trivy_capabilities": true,
      "real_world_applicability": "high",
      "rule_complexity": "moderate"
    }
  },
  "computed_metrics": {
    "total_vulnerabilities": 7,
    "unique_rule_ids": 7,
    "has_critical_vulnerabilities": false,
    "cloud_provider": "aws",
    "language": "cloudformation",
    "component_count": 6,
    "file_count": 3,
    "service_categories": [
      "elasticache",
      "elb",
      "ecs",
      "iam",
      "cloudwatch",
      "ec2",
      "rds"
    ]
  },
  "dataset_metadata": {
    "project_id": "enterprise-identity-sso-platform",
    "generation_timestamp": "2025-08-08T16:42:44.072022",
    "version": "1.0",
    "data_quality": "medium"
  }
}