AWSTemplateFormatVersion: '2010-09-09'
Description: 'HIPAA-Compliant Patient Portal System - Healthcare infrastructure with microservices architecture'

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Network Configuration"
        Parameters:
          - VpcCidr
          - PublicSubnet1Cidr
          - PublicSubnet2Cidr
          - PrivateSubnet1Cidr
          - PrivateSubnet2Cidr
          - DataSubnet1Cidr
          - DataSubnet2Cidr
      - Label:
          default: "Application Configuration"
        Parameters:
          - Environment
          - InstanceType
          - DatabaseInstanceClass
          - DatabaseUsername
          - DatabasePassword

Parameters:
  Environment:
    Type: String
    Default: production
    AllowedValues: [development, staging, production]
    Description: Environment name for resource tagging
  
  VpcCidr:
    Type: String
    Default: 10.0.0.0/16
    Description: CIDR block for VPC
  
  PublicSubnet1Cidr:
    Type: String
    Default: 10.0.1.0/24
    Description: CIDR block for public subnet 1
  
  PublicSubnet2Cidr:
    Type: String
    Default: 10.0.2.0/24
    Description: CIDR block for public subnet 2
  
  PrivateSubnet1Cidr:
    Type: String
    Default: 10.0.3.0/24
    Description: CIDR block for private subnet 1
  
  PrivateSubnet2Cidr:
    Type: String
    Default: 10.0.4.0/24
    Description: CIDR block for private subnet 2
  
  DataSubnet1Cidr:
    Type: String
    Default: 10.0.5.0/24
    Description: CIDR block for data subnet 1
  
  DataSubnet2Cidr:
    Type: String
    Default: 10.0.6.0/24
    Description: CIDR block for data subnet 2
  
  InstanceType:
    Type: String
    Default: t3.medium
    AllowedValues: [t3.small, t3.medium, t3.large]
    Description: EC2 instance type for web application tier
  
  DatabaseInstanceClass:
    Type: String
    Default: db.t3.micro
    AllowedValues: [db.t3.micro, db.t3.small, db.t3.medium]
    Description: RDS instance class for patient database
  
  DatabaseUsername:
    Type: String
    Default: hipaaadmin
    Description: Master username for RDS database
  
  DatabasePassword:
    Type: String
    NoEcho: true
    MinLength: 8
    Description: Master password for RDS database

Resources:
  # VPC and Networking
  HipaaPatientPortalVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: hipaa-compliant-patient-portal-system-vpc-main
        - Key: Environment
          Value: !Ref Environment

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: hipaa-compliant-patient-portal-system-igw-main

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref HipaaPatientPortalVpc
      InternetGatewayId: !Ref InternetGateway

  # Public Subnets
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref HipaaPatientPortalVpc
      CidrBlock: !Ref PublicSubnet1Cidr
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: hipaa-compliant-patient-portal-system-subnet-public1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref HipaaPatientPortalVpc
      CidrBlock: !Ref PublicSubnet2Cidr
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: hipaa-compliant-patient-portal-system-subnet-public2

  # Private Subnets
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref HipaaPatientPortalVpc
      CidrBlock: !Ref PrivateSubnet1Cidr
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: hipaa-compliant-patient-portal-system-subnet-private1

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref HipaaPatientPortalVpc
      CidrBlock: !Ref PrivateSubnet2Cidr
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: hipaa-compliant-patient-portal-system-subnet-private2

  # Data Subnets
  DataSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref HipaaPatientPortalVpc
      CidrBlock: !Ref DataSubnet1Cidr
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: hipaa-compliant-patient-portal-system-subnet-data1

  DataSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref HipaaPatientPortalVpc
      CidrBlock: !Ref DataSubnet2Cidr
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: hipaa-compliant-patient-portal-system-subnet-data2

  # Route Tables
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref HipaaPatientPortalVpc
      Tags:
        - Key: Name
          Value: hipaa-compliant-patient-portal-system-rt-public

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  # Application Load Balancer (VULNERABILITY: ALB_NOT_PUBLIC - missing Scheme: internal)
  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: hipaa-compliant-patient-portal-system-alb-main
      Type: application
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      SecurityGroups:
        - !Ref ALBSecurityGroup
      Tags:
        - Key: Name
          Value: hipaa-compliant-patient-portal-system-alb-main
        - Key: Environment
          Value: !Ref Environment

  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Application Load Balancer
      VpcId: !Ref HipaaPatientPortalVpc
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: hipaa-compliant-patient-portal-system-sg-alb

  # Launch Configuration for Web Application Tier (VULNERABILITY: NO_PUBLIC_IP - AssociatePublicIpAddress: true)
  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: ami-0c02fb55956c7d316
      InstanceType: !Ref InstanceType
      SecurityGroups:
        - !Ref WebAppSecurityGroup
      AssociatePublicIpAddress: true
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y httpd
          systemctl start httpd
          systemctl enable httpd
          echo "<h1>HIPAA Patient Portal - ${Environment}</h1>" > /var/www/html/index.html

  # Auto Scaling Group for Web Application Tier
  WebAppAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: hipaa-compliant-patient-portal-system-asg-webapp
      LaunchConfigurationName: !Ref WebAppLaunchConfig
      MinSize: 2
      MaxSize: 4
      DesiredCapacity: 2
      VPCZoneIdentifier:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      TargetGroupARNs:
        - !Ref ALBTargetGroup
      Tags:
        - Key: Name
          Value: hipaa-compliant-patient-portal-system-instance-webapp
          PropagateAtLaunch: true
        - Key: Environment
          Value: !Ref Environment
          PropagateAtLaunch: true

  WebAppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for web application instances
      VpcId: !Ref HipaaPatientPortalVpc
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref ALBSecurityGroup
      Tags:
        - Key: Name
          Value: hipaa-compliant-patient-portal-system-sg-webapp

  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: hipaa-patient-portal-tg
      Port: 80
      Protocol: HTTP
      VpcId: !Ref HipaaPatientPortalVpc
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      Tags:
        - Key: Name
          Value: hipaa-compliant-patient-portal-system-tg-main

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ALBTargetGroup
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP

  # Database Subnet Group
  DatabaseSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: hipaa-compliant-patient-portal-system-dbsubnetgroup-main
      DBSubnetGroupDescription: Subnet group for patient database
      SubnetIds:
        - !Ref DataSubnet1
        - !Ref DataSubnet2
      Tags:
        - Key: Name
          Value: hipaa-compliant-patient-portal-system-dbsubnetgroup-main

  # Patient Database (RDS MySQL)
  PatientDatabase:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: hipaa-compliant-patient-portal-system-rds-patient
      DBInstanceClass: !Ref DatabaseInstanceClass
      Engine: mysql
      EngineVersion: 8.0.35
      MasterUsername: !Ref DatabaseUsername
      MasterUserPassword: !Ref DatabasePassword
      AllocatedStorage: 20
      StorageType: gp2
      StorageEncrypted: true
      VPCSecurityGroups:
        - !Ref DatabaseSecurityGroup
      DBSubnetGroupName: !Ref DatabaseSubnetGroup
      BackupRetentionPeriod: 7
      MultiAZ: true
      Tags:
        - Key: Name
          Value: hipaa-compliant-patient-portal-system-rds-patient
        - Key: Environment
          Value: !Ref Environment

  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for patient database
      VpcId: !Ref HipaaPatientPortalVpc
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref WebAppSecurityGroup
      Tags:
        - Key: Name
          Value: hipaa-compliant-patient-portal-system-sg-database

  # Document Storage S3 Bucket (VULNERABILITY: S3-ENABLE_LOGGING - missing LoggingConfiguration)
  DocumentStorageBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'hipaa-compliant-patient-portal-system-s3-documents-${AWS::AccountId}'
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Name
          Value: hipaa-compliant-patient-portal-system-s3-documents
        - Key: Environment
          Value: !Ref Environment

  # Backup Storage S3 Bucket (VULNERABILITY: S3-ENABLE_LOGGING - missing LoggingConfiguration)
  BackupStorageBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'hipaa-compliant-patient-portal-system-s3-backups-${AWS::AccountId}'
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: BackupRetention
            Status: Enabled
            Transitions:
              - TransitionInDays: 30
                StorageClass: STANDARD_IA
              - TransitionInDays: 90
                StorageClass: GLACIER
      Tags:
        - Key: Name
          Value: hipaa-compliant-patient-portal-system-s3-backups
        - Key: Environment
          Value: !Ref Environment

  # CloudWatch Log Group for Audit Logging
  AuditLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /hipaa-patient-portal/audit-logs
      RetentionInDays: 2555
      Tags:
        - Key: Name
          Value: hipaa-compliant-patient-portal-system-logs-audit
        - Key: Environment
          Value: !Ref Environment

  # CloudTrail for Audit Logging (VULNERABILITY: ENSURE_CLOUDWATCH_INTEGRATION - missing CloudWatchLogsLogGroupArn)
  # (VULNERABILITY: ENABLE_ALL_REGIONS - IsMultiRegionTrail: false)
  AuditCloudTrail:
    Type: AWS::CloudTrail::Trail
    Properties:
      TrailName: hipaa-compliant-patient-portal-system-cloudtrail-audit
      S3BucketName: !Ref CloudTrailBucket
      S3KeyPrefix: cloudtrail-logs
      IsLogging: true
      IsMultiRegionTrail: false
      IncludeGlobalServiceEvents: true
      Tags:
        - Key: Name
          Value: hipaa-compliant-patient-portal-system-cloudtrail-audit
        - Key: Environment
          Value: !Ref Environment

  CloudTrailBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'hipaa-compliant-patient-portal-system-s3-cloudtrail-${AWS::AccountId}'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  # SQS Queue for Patient Communications (VULNERABILITY: ENABLE_QUEUE_ENCRYPTION - missing KmsMasterKeyId)
  PatientCommunicationQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: hipaa-compliant-patient-portal-system-sqs-communications
      VisibilityTimeoutSeconds: 300
      MessageRetentionPeriod: 1209600
      Tags:
        - Key: Name
          Value: hipaa-compliant-patient-portal-system-sqs-communications
        - Key: Environment
          Value: !Ref Environment

  # IAM Password Policy (VULNERABILITY: REQUIRE_UPPERCASE_IN_PASSWORDS - missing RequireUppercaseCharacters)
  # Note: CloudFormation doesn't directly support IAM Account Password Policy
  # This would typically be handled through AWS Config or custom resources